/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/index.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./src/admin.js":
/*!**********************!*\
  !*** ./src/admin.js ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar admin = function () {\n\n  var self = {};\n\n  /*\n  **************************\n        PRIVATE\n   **************************\n   */\n\n  function menu() {\n\n    $('#navBilan').on('click', function () {\n      $(\".visible\").css(\"display\", \"none\");\n      $(\"#showBilan\").css(\"display\", \"block\");\n    });\n\n    $('#navParam').on('click', function () {\n      $(\".visible\").css(\"display\", \"none\");\n      $(\"#showParam\").css(\"display\", \"block\");\n    });\n\n    $('#navCompte').on('click', function () {\n      $(\".visible\").css(\"display\", \"none\");\n      $(\"#modifyPassword\").css(\"display\", \"block\");\n    });\n  }\n\n  /*\n  **************************\n        PUBLIC\n   **************************\n   */\n\n  self.init = function () {\n\n    // on met à jour la dataliste classes\n    var dataListe = __webpack_require__(/*! ./misc/dataListe.js */ \"./src/misc/dataListe.js\");\n\n    //dataliste classe pour creation equipe classe\n    var el1 = document.querySelector('#dataListe1');\n    dataListe.set(el1, {\n      'form': true\n    });\n\n    //dataliste classe pour liste eleves\n    var el4 = document.querySelector('#dataListe4');\n    dataListe.set(el4, {\n      'form': true\n    });\n\n    //dataliste classe pour nouvel eleve\n    var el6 = document.querySelector('#dataListe6');\n    dataListe.set(el6);\n\n    $.get(\"/admin/tableClassesJSON/\", function (data) {\n      dataListe.setDataListe(el1, data);\n      dataListe.setDataListe(el4, data);\n      dataListe.setDataListe(el6, data);\n    });\n\n    //liste matiere pour creation equipe classe\n    var el2 = document.querySelector('#dataListe2');\n    dataListe.set(el2);\n    //liste professeur pour creation equipe classe\n    var el3 = document.querySelector('#dataListe3');\n    dataListe.set(el3);\n\n    //liste des Periodes\n    var el5 = document.querySelector('#dataListe5');\n    dataListe.set(el5, {\n      'form': true\n    });\n\n    $('input[type=text]').clearer(); //permet de réinitialiser les input\n\n\n    // addEventListener pour les boutons déclenchement des modals\n\n    document.getElementById(\"buttonAddMatiere\").addEventListener('click', function () {\n      document.getElementById('addMatiereForm').setAttribute(\"data-mode\", \"ajouter\");\n      document.getElementById('addMatiereForm').setAttribute(\"data-idclassematiere\", '');\n      //liste matiere on enleve l'attribut readonly\n      var el2 = document.querySelector('#dataListe2');\n      dataListe.readOnly(el2, false);\n      //liste professeur\n      var el3 = document.querySelector('#dataListe3');\n      dataListe.readOnly(el3, false);\n      //div formExtraPeriode doit être masquée\n      $('#formExtraPeriode').css(\"display\", \"none\");\n      document.getElementById('addMatiereForm').reset();\n      $('#addMatiereClasse').modal();\n    });\n\n    // les imports\n    var structure = __webpack_require__(/*! ./admin/structure.js */ \"./src/admin/structure.js\");\n    var professeurs = __webpack_require__(/*! ./admin/param/professeurs.js */ \"./src/admin/param/professeurs.js\");\n    var eleves = __webpack_require__(/*! ./admin/param/eleves.js */ \"./src/admin/param/eleves.js\");\n    var matieres = __webpack_require__(/*! ./admin/param/matieres.js */ \"./src/admin/param/matieres.js\");\n    var equipesClasses = __webpack_require__(/*! ./admin/param/equipesClasses.js */ \"./src/admin/param/equipesClasses.js\");\n    var decompteHeures = __webpack_require__(/*! ./admin/ramassages/decompteHeures.js */ \"./src/admin/ramassages/decompteHeures.js\");\n    var periodes = __webpack_require__(/*! ./admin/ramassages/periodes.js */ \"./src/admin/ramassages/periodes.js\");\n    var imports = __webpack_require__(/*! ./admin/param/imports.js */ \"./src/admin/param/imports.js\");\n\n    structure.init();\n    professeurs.init();\n    eleves.init();\n    matieres.init();\n    equipesClasses.init();\n    decompteHeures.init();\n    periodes.init();\n    imports.init();\n    menu();\n  };\n  return self;\n}();\n\nmodule.exports = admin;\n\n//# sourceURL=webpack:///./src/admin.js?");

/***/ }),

/***/ "./src/admin/param/eleves.js":
/*!***********************************!*\
  !*** ./src/admin/param/eleves.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/*\n**************************\n      En lien avec partialsAdmin/eleve.ejs\n **************************\n */\n\nvar eleves = function () {\n\n  var self = {};\n  var dataListe = __webpack_require__(/*! ../../misc/dataListe.js */ \"./src/misc/dataListe.js\");\n  var loginPassword = __webpack_require__(/*! ../../loginPassword.js */ \"./src/loginPassword.js\");\n\n  var el4 = document.getElementById('dataListe4');\n  dataListe.selectId(el4);\n\n  var el6 = document.getElementById('dataListe6');\n  dataListe.selectId(el6);\n  /*\n  **************************\n        PRIVATE\n   **************************\n   */\n\n  /*\n  **************************\n        dataliste choix classe\n   **************************\n   */\n\n  $('#dataListe4Form').submit(function (e) {\n    e.preventDefault();\n    var el4 = document.getElementById('dataListe4');\n    var classe = dataListe.getName(el4);\n    var id = dataListe.getId(el4);\n    if (classe !== '') {\n      $('#showTableEleves').css(\"display\", \"block\");\n      refreshEleves(classe);\n    } else {\n      $('#showTableEleves').css(\"display\", \"none\");\n    }\n  });\n\n  /*\n  **************************\n        gestion du formulaire pour ajout d'un eleve\n   **************************\n   */\n  $('#ajouterEleveForm').submit(function (e) {\n    e.preventDefault();\n    var el6 = document.getElementById('dataListe6');\n    var classe = dataListe.getName(el6);\n    var nom = document.querySelector('#ajouterEleveForm input[name=\"nom\"]').value.toLowerCase();\n    var prenom = document.querySelector('#ajouterEleveForm input[name=\"prenom\"]').value.toLowerCase();\n    var ine = document.querySelector('#ajouterEleveForm input[name=\"ine\"]').value.toUpperCase();\n    var login = loginPassword.createLogin(prenom, nom);\n    $.post(\"/users/creerEleve\", {\n      \"classe\": classe,\n      \"ine\": ine,\n      \"nom\": nom,\n      \"prenom\": prenom,\n      \"login\": login\n    }, function (data) {\n      var login = data.login;\n      var password = data.password;\n      if (data.message !== '') {\n        $('#error').html(data.message);\n        $('#erreur').modal();\n      } else {\n        document.querySelector('#validerEleveForm input[name=\"login\"]').value = login;\n        document.querySelector('#validerEleveForm input[name=\"password\"]').value = password;\n        dataListe.readOnly(el6, true);\n        document.querySelector('#ajouterEleveForm input[name=\"nom\"]').readOnly = true;\n        document.querySelector('#ajouterEleveForm input[name=\"prenom\"]').readOnly = true;\n        document.querySelector('#ajouterEleveForm input[name=\"ine\"]').readOnly = true;\n        $('#validerEleveForm').css(\"display\", \"block\");\n      }\n    });\n  });\n\n  $('#validerEleveForm').submit(function (e) {\n    e.preventDefault();\n    var nom = document.querySelector('#ajouterEleveForm input[name=\"nom\"]').value.toLowerCase();\n    var prenom = document.querySelector('#ajouterEleveForm input[name=\"prenom\"]').value.toLowerCase();\n    var ine = document.querySelector('#ajouterEleveForm input[name=\"ine\"]').value.toUpperCase();\n    var login = document.querySelector('#validerEleveForm input[name=\"login\"]').value;\n    var password = document.querySelector('#validerEleveForm input[name=\"password\"]').value;\n    var el6 = document.getElementById('dataListe6');\n    var classe = dataListe.getName(el6);\n    $.post(\"/users/validerEleve\", {\n      \"nom\": nom,\n      \"prenom\": prenom,\n      \"login\": login,\n      \"password\": password,\n      \"ine\": ine,\n      \"classe\": classe\n    }, function () {\n      console.log('ok');\n      $('#validerEleveForm')[0].reset();\n      $('#ajouterEleveForm')[0].reset();\n      dataListe.readOnly(el6, false);\n      document.querySelector('#ajouterEleveForm input[name=\"nom\"]').readOnly = false;\n      document.querySelector('#ajouterEleveForm input[name=\"prenom\"]').readOnly = false;\n      document.querySelector('#ajouterEleveForm input[name=\"ine\"]').readOnly = false;\n      $('#validerEleveForm').css(\"display\", \"none\");\n      refreshEleves();\n    });\n  });\n\n  function initDataTablesEleves() {\n    var liste = [];\n    var table = $('#tableEleves').DataTable({\n      data: liste,\n      dom: 'Bfrtip',\n      buttons: ['csv', 'excel', 'pdf'],\n      language: {\n        processing: \"Traitement en cours...\",\n        search: \"Rechercher&nbsp;:\",\n        lengthMenu: \"Afficher _MENU_ &eacute;l&eacute;ments\",\n        info: \"Affichage de l'&eacute;lement _START_ &agrave; _END_ sur _TOTAL_ &eacute;l&eacute;ments\",\n        infoEmpty: \"Affichage de l'&eacute;lement 0 &agrave; 0 sur 0 &eacute;l&eacute;ments\",\n        infoFiltered: \"(filtr&eacute; de _MAX_ &eacute;l&eacute;ments au total)\",\n        infoPostFix: \"\",\n        loadingRecords: \"Chargement en cours...\",\n        zeroRecords: \"Aucun &eacute;l&eacute;ment &agrave; afficher\",\n        emptyTable: \"Aucune donnée disponible dans le tableau\",\n        paginate: {\n          first: \"Premier\",\n          previous: \"Pr&eacute;c&eacute;dent\",\n          next: \"Suivant\",\n          last: \"Dernier\"\n        },\n        aria: {\n          sortAscending: \": activer pour trier la colonne par ordre croissant\",\n          sortDescending: \": activer pour trier la colonne par ordre décroissant\"\n        }\n      },\n\n      columns: [{\n        data: null,\n        render: function render(data, type, row) {\n          // Combine the first and last names into a single table field\n          return data.nom + ' ' + data.prenom;\n        }\n      }, {\n        data: 'login'\n      }, {\n        data: 'password'\n      }]\n    });\n\n    // Edit record\n    $('#tableEleves').on('click', 'a.editor_edit', function (e) {\n      e.preventDefault();\n      console.log($(this).closest('tr'));\n      //$('#modifierEleve').modal();\n    });\n  };\n\n  /*\n     **************************\n          Script pour afficher une classe\n      **************************\n      */\n  function refreshEleves(classe) {\n    $.post(\"/admin/tableElevesClasseJSON/\", {\n      'classe': classe\n    }, function (data) {\n      var table = $('#tableEleves').DataTable({ retrieve: true });\n      table.clear().draw();\n      table.rows.add(data); // Add new data\n      table.columns.adjust().draw(); // Redraw the DataTable\n    });\n  };\n\n  /*\n  **************************\n        PUBLIC\n   **************************\n   */\n\n  self.init = function () {\n    initDataTablesEleves();\n  };\n\n  return self;\n}();\n\nmodule.exports = eleves;\n\n//# sourceURL=webpack:///./src/admin/param/eleves.js?");

/***/ }),

/***/ "./src/admin/param/equipesClasses.js":
/*!*******************************************!*\
  !*** ./src/admin/param/equipesClasses.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar equipesClasses = function () {\n\n  var self = {};\n  var dataListe = __webpack_require__(/*! ../../misc/dataListe.js */ \"./src/misc/dataListe.js\");\n  /*\n  **************************\n        PRIVATE\n   **************************\n   */\n\n  var el1 = document.getElementById('dataListe1');\n  dataListe.selectId(el1);\n  var el2 = document.getElementById('dataListe2');\n  dataListe.selectId(el2);\n  var el3 = document.getElementById('dataListe3');\n  dataListe.selectId(el3);\n\n  $('#dataListe1Form').submit(function (e) {\n    e.preventDefault();\n    var el1 = document.getElementById('dataListe1');\n    var classe = dataListe.getName(el1);\n    var id = dataListe.getId(el1);\n    if (classe !== '') {\n      $('#showTableEquipeClasse').css(\"display\", \"block\");\n      refreshTableEquipeClasse(classe);\n    } else {\n      $('#showTableEquipeClasse').css(\"display\", \"none\");\n    }\n  });\n\n  /*\n  ********************************************************************\n  validation ajout ou modification matiere\n  ************************************************************\n    */\n  $('#addMatiereForm').submit(function (e) {\n    e.preventDefault();\n    var el1 = document.getElementById('dataListe1');\n    var el2 = document.getElementById('dataListe2');\n    var el3 = document.getElementById('dataListe3');\n    var classe = dataListe.getName(el1);\n    var idClasse = dataListe.getId(el1);\n    var idMatiere = dataListe.getId(el2);\n    var idProfesseur = dataListe.getId(el3);\n    var duree = document.getElementById('duree').value;\n    var dureeExc = duree; //la duree exc est par defaut égale à la duree de la colle\n    var mode = document.getElementById('addMatiereForm').getAttribute(\"data-mode\");\n    var idClasseMatiere = '';\n    if (mode === 'modifier') {\n      idClasseMatiere = document.getElementById('addMatiereForm').getAttribute(\"data-idclassematiere\");\n      dureeExc = document.getElementById('dureeExc').value; //on prend en compte la duree exc\n    }\n    $.post(\"/admin/addOrModClasseMatiere/\", {\n      'idClasse': idClasse,\n      'idMatiere': idMatiere,\n      'idProfesseur': idProfesseur,\n      'duree': duree,\n      'dureeExc': dureeExc,\n      \"mode\": mode, // mode : ajout ou modification d'une colle\n      \"idClasseMatiere\": idClasseMatiere //utile en cas de modif\n    }, function (message) {\n\n      if (message.error !== \"ok\") {\n        $('#error').html(message.error);\n        $('#erreur').modal();\n      } else {\n        document.getElementById('addMatiereForm').reset();\n        $('#addMatiereClasse').modal('hide');\n        refreshTableEquipeClasse(classe);\n      }\n    });\n  });\n\n  /*\n  ********************************************************************\n    Suppression d'une matiere\n  ************************************************************\n    */\n  function suppClasseMatiere(idClasseMatiere) {\n    var el1 = document.getElementById('dataListe1');\n    var classe = dataListe.getName(el1);\n    $.post(\"/admin/suppClasseMatiere/\", {\n      \"idClasseMatiere\": idClasseMatiere\n    }, function (message) {\n      refreshTableEquipeClasse(classe);\n    });\n  }\n\n  /*\n  **************************\n        Script pour afficher une classe\n   **************************\n   */\n  function formatColleurs(d) {\n    // `d` is the original data object for the row\n    var table = '<table cellpadding=\"5\" cellspacing=\"0\" border=\"0\" style=\"padding-left:50px;\">';\n    for (var i = 0; i < d.nomColleur.length; i++) {\n      table += '<tr>' + '<td>colleur :</td>' + '<td>' + d.nomColleur[i] + ' ' + d.prenomColleur[i] + '</td>' + '</tr>';\n    }\n\n    table += '</table>';\n    return table;\n  };\n\n  function initDataTablesEquipeClasse() {\n    var liste = [];\n    var table = $('#tableEquipeClasse').DataTable({\n      retrieve: true,\n      data: liste,\n      // dom : '<\"top\"Bif>rt<\"bottom\"lp><\"clear\">',\n      language: {\n        processing: \"Traitement en cours...\",\n        search: \"Rechercher&nbsp;:\",\n        lengthMenu: \"Afficher _MENU_ &eacute;l&eacute;ments\",\n        info: \"Affichage de l'&eacute;lement _START_ &agrave; _END_ sur _TOTAL_ &eacute;l&eacute;ments\",\n        infoEmpty: \"Affichage de l'&eacute;lement 0 &agrave; 0 sur 0 &eacute;l&eacute;ments\",\n        infoFiltered: \"(filtr&eacute; de _MAX_ &eacute;l&eacute;ments au total)\",\n        infoPostFix: \"\",\n        loadingRecords: \"Chargement en cours...\",\n        zeroRecords: \"Aucun &eacute;l&eacute;ment &agrave; afficher\",\n        emptyTable: \"Aucune donnée disponible dans le tableau\",\n        paginate: {\n          first: \"Premier\",\n          previous: \"Pr&eacute;c&eacute;dent\",\n          next: \"Suivant\",\n          last: \"Dernier\"\n        },\n        aria: {\n          sortAscending: \": activer pour trier la colonne par ordre croissant\",\n          sortDescending: \": activer pour trier la colonne par ordre décroissant\"\n        }\n      },\n\n      columns: [{\n        data: 'matiere'\n      }, {\n        data: null,\n        render: function render(data, type, row) {\n          // Combine the first and last names into a single table field\n          return data.nom + ' ' + data.prenom;\n        }\n      }, {\n        data: 'duree'\n      }, {\n        data: 'dureeExc'\n      }, {\n        \"className\": 'details-control',\n        \"orderable\": false,\n        \"data\": null,\n        \"defaultContent\": ''\n      }, {\n        data: null,\n        className: \"center\",\n        render: function render(data, type, row) {\n          if (data.nomColleur.length > 0) {\n            return '<a href=\"\" class=\"editor_modif\">Edit</a>';\n          }\n          return '<a href=\"\" class=\"editor_modif\">Edit</a>/<a href=\"\" class=\"editor_supp\">Supp</a>';\n        }\n      }]\n    });\n\n    // Edit record\n    $('#tableEquipeClasse').on('click', 'a.editor_modif', function (e) {\n      e.preventDefault();\n      var tr = $(this).closest('tr');\n      var row = table.row(tr);\n      var element = row.data();\n      var idClasseMatiere = element.idClasseMatiere;\n      var duree = element.duree;\n      var dureeExc = element.dureeExc;\n      var nom = element.nom;\n      var prenom = element.prenom;\n      var matiere = element.matiere;\n      var extraPeriode = element.extraPeriode;\n      // utiliser un data-action='modifier' ou data-action='supprimer'\n      document.getElementById('addMatiereForm').setAttribute(\"data-mode\", \"modifier\");\n      document.getElementById('addMatiereForm').setAttribute(\"data-idclassematiere\", idClasseMatiere);\n      var el2 = document.querySelector('#dataListe2');\n      dataListe.readOnly(el2, true);\n      dataListe.setName(el2, matiere);\n      //liste professeur\n      var el3 = document.querySelector('#dataListe3');\n      dataListe.readOnly(el3, true);\n      dataListe.setName(el3, nom + ' ' + prenom);\n      $(document.getElementById('duree')).val(duree);\n      $(document.getElementById('dureeExc')).val(dureeExc);\n      if (extraPeriode === true) {\n        $('#formExtraPeriode').css(\"display\", \"block\");\n      } else {\n        $('#formExtraPeriode').css(\"display\", \"none\");\n      }\n      $('#addMatiereClasse').modal();\n    });\n\n    // Supp record\n    $('#tableEquipeClasse').on('click', 'a.editor_supp', function (e) {\n      e.preventDefault();\n      var tr = $(this).closest('tr');\n      var row = table.row(tr);\n      var element = row.data();\n      var idClasseMatiere = element.idClasseMatiere;\n      suppClasseMatiere(idClasseMatiere);\n    });\n\n    $('#tableEquipeClasse tbody').on('click', 'td.details-control', function () {\n      var tr = $(this).closest('tr');\n      var row = table.row(tr);\n      if (row.child.isShown()) {\n        // This row is already open - close it\n        row.child.hide();\n        tr.removeClass('shown');\n      } else {\n        // Open this row\n        row.child(formatColleurs(row.data())).show();\n        tr.addClass('shown');\n      }\n    });\n\n    //coluonne extra période non visible pat defaut\n    table.columns(3).visible(false);\n  };\n\n  /*\n  **************************\n      mise à jour de la table\n   **************************\n   */\n\n  function refreshTableEquipeClasse(classe) {\n    $.post(\"/admin/tableEquipeClasseJSON/\", {\n      'classe': classe\n    }, function (data) {\n      var table = $('#tableEquipeClasse').DataTable();\n      var button = document.getElementById('buttonAddSuppPeriode');\n      if (data.length !== 0) {\n        if (data[0].extraPeriode === false || typeof data[0].extraPeriode === 'undefined') {\n          table.columns(3).visible(false);\n          button.setAttribute(\"data-action\", \"ajouter\");\n          button.innerHTML = 'Ajouter une période';\n          document.getElementById(\"defExtraPeriode\").style.display = \"none\";\n        } else {\n          table.columns(3).visible(true);\n          button.setAttribute(\"data-action\", \"supprimer\");\n          button.innerHTML = 'Supprimer la période';\n          $('#datetimepicker7').find(\"input\").val(moment(data[0].debutPeriode).format('DD/MM/YYYY'));\n          $('#datetimepicker8').find(\"input\").val(moment(data[0].finPeriode).format('DD/MM/YYYY'));\n          document.getElementById(\"defExtraPeriode\").style.display = \"block\";\n        }\n      }\n\n      table.clear().draw();\n      table.rows.add(data); // Add new data\n      table.columns.adjust().draw(); // Redraw the DataTable\n    });\n  };\n\n  /*\n  **************************\n      Bouton pour ajouter ou supprimer extraPeriode\n   **************************\n   */\n  $('#buttonAddSuppPeriode').click(function () {\n    var table = $('#tableEquipeClasse').DataTable();\n    var action = this.getAttribute(\"data-action\");\n    var extraPeriode = void 0;\n    if (action === 'ajouter') {\n      table.columns(3).visible(true);\n      extraPeriode = true;\n      document.getElementById(\"defExtraPeriode\").style.display = \"block\";\n      this.setAttribute(\"data-action\", \"supprimer\");\n      this.innerHTML = 'Supprimer la période';\n    } else {\n      table.columns(3).visible(false);\n      extraPeriode = false;\n      document.getElementById(\"defExtraPeriode\").style.display = \"none\";\n      this.setAttribute(\"data-action\", \"ajouter\");\n      this.innerHTML = 'Ajouter une période';\n    }\n    var el1 = document.getElementById('dataListe1');\n    var idClasse = dataListe.getId(el1);\n    $.post(\"/admin/changeExtraPeriode/\", {\n      'idClasse': idClasse,\n      'extraPeriode': extraPeriode\n    }, function () {});\n  });\n\n  $('#datetimepicker7').datetimepicker({\n    format: 'L'\n  });\n  $('#datetimepicker8').datetimepicker({\n    format: 'L',\n    useCurrent: false\n  });\n  $(\"#datetimepicker7\").on(\"change.datetimepicker\", function (e) {\n    $('#datetimepicker8').datetimepicker('minDate', e.date);\n  });\n  $(\"#datetimepicker8\").on(\"change.datetimepicker\", function (e) {\n    $('#datetimepicker7').datetimepicker('maxDate', e.date);\n  });\n\n  $('#defExtraPeriodeForm').submit(function (e) {\n    e.preventDefault();\n    var debutPeriode = $('#datetimepicker7').find(\"input\").val();\n    var finPeriode = $('#datetimepicker8').find(\"input\").val();\n    var el1 = document.getElementById('dataListe1');\n    var idClasse = dataListe.getId(el1);\n    $.post(\"/admin/defExtraPeriode/\", {\n      'idClasse': idClasse,\n      'debutPeriode': debutPeriode,\n      'finPeriode': finPeriode\n    }, function () {});\n  });\n  /*\n  **************************\n        PUBLIC\n   **************************\n   */\n\n  self.init = function () {\n    initDataTablesEquipeClasse();\n  };\n\n  return self;\n}();\n\nmodule.exports = equipesClasses;\n\n//# sourceURL=webpack:///./src/admin/param/equipesClasses.js?");

/***/ }),

/***/ "./src/admin/param/imports.js":
/*!************************************!*\
  !*** ./src/admin/param/imports.js ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar imports = function () {\n\n  var self = {};\n\n  /*\n  **************************\n        PRIVATE\n   **************************\n   */\n\n  $('#uploadElevesForm').submit(function (e) {\n\n    e.preventDefault();\n\n    var formdata = new FormData();\n    formdata.append('file', $('#csvdata').get(0).files[0]);\n    formdata.append('profil', 'eleve');\n    $.ajax({\n      url: \"/users/csvData\",\n      cache: false,\n      contentType: false,\n      processData: false,\n      data: formdata,\n      type: 'post',\n      success: function success(data) {\n        $('#showTableImportEleves').css(\"display\", \"block\");\n        refreshImport(data, 'Eleves');\n      }\n    });\n  });\n\n  $('#uploadProfesseursForm').submit(function (e) {\n\n    e.preventDefault();\n\n    var formdata = new FormData();\n    formdata.append('file', $('#csvdataProf').get(0).files[0]);\n    formdata.append('profil', 'professeur');\n    $.ajax({\n      url: \"/users/csvData\",\n      cache: false,\n      contentType: false,\n      processData: false,\n      data: formdata,\n      type: 'post',\n      success: function success(data) {\n        $('#showTableImportProfesseurs').css(\"display\", \"block\");\n        refreshImport(data, 'Professeurs');\n      }\n    });\n  });\n\n  $('#uploadMatieresForm').submit(function (e) {\n\n    e.preventDefault();\n\n    var formdata = new FormData();\n    formdata.append('file', $('#csvdataMat').get(0).files[0]);\n    formdata.append('profil', 'matiere');\n    $.ajax({\n      url: \"/users/csvData\",\n      cache: false,\n      contentType: false,\n      processData: false,\n      data: formdata,\n      type: 'post',\n      success: function success(data) {\n        $('#showTableImportMatieres').css(\"display\", \"block\");\n        refreshImport(data, 'Matieres');\n      }\n    });\n  });\n\n  function initDataTablesImportEleves() {\n    $.fn.dataTable.ext.errMode = 'none';\n    var liste = [];\n    var table = $('#tableImportEleves').DataTable({\n      data: liste,\n      dom: '<\"top\"Bif>rt<\"bottom\"lp><\"clear\">',\n      language: {\n        processing: \"Traitement en cours...\",\n        search: \"Rechercher&nbsp;:\",\n        lengthMenu: \"Afficher _MENU_ &eacute;l&eacute;ments\",\n        info: \"Affichage de l'&eacute;lement _START_ &agrave; _END_ sur _TOTAL_ &eacute;l&eacute;ments\",\n        infoEmpty: \"Affichage de l'&eacute;lement 0 &agrave; 0 sur 0 &eacute;l&eacute;ments\",\n        infoFiltered: \"(filtr&eacute; de _MAX_ &eacute;l&eacute;ments au total)\",\n        infoPostFix: \"\",\n        loadingRecords: \"Chargement en cours...\",\n        zeroRecords: \"Aucun &eacute;l&eacute;ment &agrave; afficher\",\n        emptyTable: \"Aucune donnée disponible dans le tableau\",\n        paginate: {\n          first: \"Premier\",\n          previous: \"Pr&eacute;c&eacute;dent\",\n          next: \"Suivant\",\n          last: \"Dernier\"\n        },\n        aria: {\n          sortAscending: \": activer pour trier la colonne par ordre croissant\",\n          sortDescending: \": activer pour trier la colonne par ordre décroissant\"\n        }\n      },\n      buttons: [{\n        text: \"Valider l'import\",\n        action: function action(e, dt, node, config) {\n          var d = dt.buttons.exportData($.extend({\n            decodeEntities: false\n          }, config.exportOptions) // XSS protection\n          );\n\n          var dataAdd = [];\n          var dataMod = [];\n          for (var i = 0, ien = d.body.length; i < ien; i++) {\n            var row = {\n              'ine': d.body[i][0],\n              'nom': d.body[i][1],\n              'prenom': d.body[i][2],\n              'classe': d.body[i][3],\n              'login': d.body[i][4],\n              'password': d.body[i][5]\n\n            };\n            if (d.body[i][6] === 'Oui') {\n              dataAdd.push(row);\n            } else {\n              dataMod.push(row);\n            }\n          }\n          var data = {\n            'dataAdd': JSON.stringify(dataAdd),\n            'dataMod': JSON.stringify(dataMod),\n            'importAnnuel': document.getElementById(\"importAnnuel\").checked\n          };\n          $.ajax({\n            url: \"/users/importEleves\",\n            data: data,\n            type: 'post',\n            success: function success(data) {\n              $('#showTableImportEleves').css(\"display\", \"none\");\n            }\n          });\n        }\n      }],\n      columns: [{\n        data: 'ine'\n      }, {\n        data: 'nom'\n      }, {\n        data: 'prenom'\n      }, {\n        data: 'classe'\n      }, {\n        data: 'login'\n      }, {\n        data: 'password'\n      }, {\n        data: null,\n        render: function render(data, type, row) {\n          if (data.present === true) return 'Non';else return 'Oui';\n        }\n      }]\n    });\n  };\n\n  function initDataTablesImportProfesseurs() {\n    $.fn.dataTable.ext.errMode = 'none';\n    var liste = [];\n    var table = $('#tableImportProfesseurs').DataTable({\n      data: liste,\n      dom: '<\"top\"Bif>rt<\"bottom\"lp><\"clear\">',\n      language: {\n        processing: \"Traitement en cours...\",\n        search: \"Rechercher&nbsp;:\",\n        lengthMenu: \"Afficher _MENU_ &eacute;l&eacute;ments\",\n        info: \"Affichage de l'&eacute;lement _START_ &agrave; _END_ sur _TOTAL_ &eacute;l&eacute;ments\",\n        infoEmpty: \"Affichage de l'&eacute;lement 0 &agrave; 0 sur 0 &eacute;l&eacute;ments\",\n        infoFiltered: \"(filtr&eacute; de _MAX_ &eacute;l&eacute;ments au total)\",\n        infoPostFix: \"\",\n        loadingRecords: \"Chargement en cours...\",\n        zeroRecords: \"Aucun &eacute;l&eacute;ment &agrave; afficher\",\n        emptyTable: \"Aucune donnée disponible dans le tableau\",\n        paginate: {\n          first: \"Premier\",\n          previous: \"Pr&eacute;c&eacute;dent\",\n          next: \"Suivant\",\n          last: \"Dernier\"\n        },\n        aria: {\n          sortAscending: \": activer pour trier la colonne par ordre croissant\",\n          sortDescending: \": activer pour trier la colonne par ordre décroissant\"\n        }\n      },\n      buttons: [{\n        text: \"Valider l'import\",\n        action: function action(e, dt, node, config) {\n          var d = dt.buttons.exportData($.extend({\n            decodeEntities: false\n          }, config.exportOptions) // XSS protection\n          );\n\n          var dataAdd = [];\n          for (var i = 0, ien = d.body.length; i < ien; i++) {\n            var row = {\n\n              'nom': d.body[i][0],\n              'prenom': d.body[i][1].toLowerCase(),\n              'grade': d.body[i][2],\n              'login': d.body[i][3],\n              'password': d.body[i][4],\n              'changePwd': false\n            };\n            if (d.body[i][5] === 'Oui') {\n              dataAdd.push(row);\n            }\n          }\n          var data = {\n            'dataAdd': JSON.stringify(dataAdd)\n          };\n          $.ajax({\n            url: \"/users/importProfesseurs\",\n            data: data,\n            type: 'post',\n            success: function success(data) {\n              $('#showTableImportProfesseurs').css(\"display\", \"none\");\n            }\n          });\n        }\n      }],\n      columns: [{\n        data: 'nom'\n      }, {\n        data: 'prenom'\n      }, {\n        data: 'grade'\n      }, {\n        data: 'login'\n      }, {\n        data: 'password'\n      }, {\n        data: null,\n        render: function render(data, type, row) {\n          if (data.present === true) return 'Non';else return 'Oui';\n        }\n      }]\n    });\n  };\n\n  function initDataTablesImportMatieres() {\n    $.fn.dataTable.ext.errMode = 'none';\n    var liste = [];\n    var table = $('#tableImportMatieres').DataTable({\n      data: liste,\n      dom: '<\"top\"Bif>rt<\"bottom\"lp><\"clear\">',\n      language: {\n        processing: \"Traitement en cours...\",\n        search: \"Rechercher&nbsp;:\",\n        lengthMenu: \"Afficher _MENU_ &eacute;l&eacute;ments\",\n        info: \"Affichage de l'&eacute;lement _START_ &agrave; _END_ sur _TOTAL_ &eacute;l&eacute;ments\",\n        infoEmpty: \"Affichage de l'&eacute;lement 0 &agrave; 0 sur 0 &eacute;l&eacute;ments\",\n        infoFiltered: \"(filtr&eacute; de _MAX_ &eacute;l&eacute;ments au total)\",\n        infoPostFix: \"\",\n        loadingRecords: \"Chargement en cours...\",\n        zeroRecords: \"Aucun &eacute;l&eacute;ment &agrave; afficher\",\n        emptyTable: \"Aucune donnée disponible dans le tableau\",\n        paginate: {\n          first: \"Premier\",\n          previous: \"Pr&eacute;c&eacute;dent\",\n          next: \"Suivant\",\n          last: \"Dernier\"\n        },\n        aria: {\n          sortAscending: \": activer pour trier la colonne par ordre croissant\",\n          sortDescending: \": activer pour trier la colonne par ordre décroissant\"\n        }\n      },\n      buttons: [{\n        text: \"Valider l'import\",\n        action: function action(e, dt, node, config) {\n          var d = dt.buttons.exportData($.extend({\n            decodeEntities: false\n          }, config.exportOptions) // XSS protection\n          );\n\n          var dataAdd = [];\n          var dataMod = [];\n          for (var i = 0, ien = d.body.length; i < ien; i++) {\n            var row = {\n              'nom': d.body[i][0],\n              'generique': d.body[i][1]\n            };\n            if (d.body[i][2] === 'Oui') {\n              dataAdd.push(row);\n            } else {\n              dataMod.push(row);\n            }\n          }\n          var data = {\n            'dataAdd': JSON.stringify(dataAdd),\n            'dataMod': JSON.stringify(dataMod)\n          };\n          $.ajax({\n            url: \"/users/importMatieres\",\n            data: data,\n            type: 'post',\n            success: function success(data) {\n              $('#showTableImportMatieres').css(\"display\", \"none\");\n            }\n          });\n        }\n      }],\n      columns: [{\n        data: 'nom'\n      }, {\n        data: 'generique'\n      }, {\n        data: null,\n        render: function render(data, type, row) {\n          if (data.present === true) return 'Non';else return 'Oui';\n        }\n      }]\n    });\n  };\n\n  /*\n     **************************\n          Script pour afficher les tables eleves et professeurs\n      **************************\n      */\n\n  function refreshImport(data, profil) {\n    var table = $('#tableImport' + profil).DataTable({ retrieve: true });\n    table.clear().draw();\n    table.rows.add(data); // Add new data\n    table.columns.adjust().draw(); // Redraw the DataTable\n  };\n\n  $('#tableImportEleves').on('error.dt', function (e, settings, techNote, message) {\n    console.log('An error has been reported by DataTables: ', message);\n    $('#error').html(\"Votre fichier de donées semble incorrect, vous ne pouvez pas poursuivre l'import \");\n    $('#erreur').modal();\n  });\n\n  $('#tableImportProfesseurs').on('error.dt', function (e, settings, techNote, message) {\n    console.log('An error has been reported by DataTables: ', message);\n    $('#error').html(\"Votre fichier de donées semble incorrect, vous ne pouvez pas poursuivre l'import \");\n  });\n\n  $('#tableImportMatieres').on('error.dt', function (e, settings, techNote, message) {\n    console.log('An error has been reported by DataTables: ', message);\n    $('#error').html(\"Votre fichier de donées semble incorrect, vous ne pouvez pas poursuivre l'import \");\n  });\n\n  /*\n  **************************\n        PUBLIC\n   **************************\n   */\n\n  self.init = function () {\n    initDataTablesImportEleves();\n    initDataTablesImportProfesseurs();\n    initDataTablesImportMatieres();\n  };\n  return self;\n}();\n\nmodule.exports = imports;\n\n//# sourceURL=webpack:///./src/admin/param/imports.js?");

/***/ }),

/***/ "./src/admin/param/matieres.js":
/*!*************************************!*\
  !*** ./src/admin/param/matieres.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar matieres = function () {\n\n  var self = {};\n\n  /*\n  **************************\n        PRIVATE\n   **************************\n   */\n\n  function afficheMatieres(data) {\n    var liste = data;\n    var table = $('#tableMatieres').DataTable({\n      retrieve: true,\n      data: liste,\n      // dom : '<\"top\"Bif>rt<\"bottom\"lp><\"clear\">',\n      language: {\n        processing: \"Traitement en cours...\",\n        search: \"Rechercher&nbsp;:\",\n        lengthMenu: \"Afficher _MENU_ &eacute;l&eacute;ments\",\n        info: \"Affichage de l'&eacute;lement _START_ &agrave; _END_ sur _TOTAL_ &eacute;l&eacute;ments\",\n        infoEmpty: \"Affichage de l'&eacute;lement 0 &agrave; 0 sur 0 &eacute;l&eacute;ments\",\n        infoFiltered: \"(filtr&eacute; de _MAX_ &eacute;l&eacute;ments au total)\",\n        infoPostFix: \"\",\n        loadingRecords: \"Chargement en cours...\",\n        zeroRecords: \"Aucun &eacute;l&eacute;ment &agrave; afficher\",\n        emptyTable: \"Aucune donnée disponible dans le tableau\",\n        paginate: {\n          first: \"Premier\",\n          previous: \"Pr&eacute;c&eacute;dent\",\n          next: \"Suivant\",\n          last: \"Dernier\"\n        },\n        aria: {\n          sortAscending: \": activer pour trier la colonne par ordre croissant\",\n          sortDescending: \": activer pour trier la colonne par ordre décroissant\"\n        }\n      },\n\n      columns: [{\n        data: 'nom'\n      }, {\n        data: 'generique'\n      }]\n    });\n\n    table.clear().draw();\n    table.rows.add(liste); // Add new data\n    table.columns.adjust().draw(); // Redraw the DataTable\n  };\n\n  /*\n  **************************\n        PUBLIC\n   **************************\n   */\n\n  self.init = function () {\n    var dataListe = __webpack_require__(/*! ../../misc/dataListe.js */ \"./src/misc/dataListe.js\");\n\n    $.get(\"/admin/tableMatieresJSON/\", function (data) {\n      var el = document.getElementById('dataListe2');\n      dataListe.setDataListe(el, data);\n      afficheMatieres(data);\n    });\n  };\n\n  return self;\n}();\n\nmodule.exports = matieres;\n\n/*\n**************************\n      Script pour afficher les matieres\n **************************\n */\n\n//# sourceURL=webpack:///./src/admin/param/matieres.js?");

/***/ }),

/***/ "./src/admin/param/professeurs.js":
/*!****************************************!*\
  !*** ./src/admin/param/professeurs.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar professeurs = function () {\n\n  var self = {};\n  var dataListe = __webpack_require__(/*! ../../misc/dataListe.js */ \"./src/misc/dataListe.js\");\n  var loginPassword = __webpack_require__(/*! ../../loginPassword.js */ \"./src/loginPassword.js\");\n  /*\n  **************************\n        PRIVATE\n   **************************\n   */\n\n  /*\n  **************************\n        gestion du formulaire pour ajout d'un professeur\n   **************************\n   */\n  $('#ajouterProfesseurForm').submit(function (e) {\n    e.preventDefault();\n    var nom = document.querySelector('#ajouterProfesseurForm input[name=\"nom\"]').value.toLowerCase();\n    var prenom = document.querySelector('#ajouterProfesseurForm input[name=\"prenom\"]').value.toLowerCase();\n    var grade = document.querySelector('#ajouterProfesseurForm input[name=\"grade\"]').value.toLowerCase();\n    var login = loginPassword.createLogin(prenom, nom);\n    $.post(\"/users/creerProfesseur\", {\n      \"nom\": nom,\n      \"prenom\": prenom,\n      \"login\": login\n    }, function (data) {\n      var login = data.login;\n      var password = data.password;\n      if (data.message !== '') {\n        $('#error').html(data.message);\n        $('#erreur').modal();\n      }\n      document.querySelector('#validerProfesseurForm input[name=\"login\"]').value = login;\n      document.querySelector('#validerProfesseurForm input[name=\"password\"]').value = password;\n      $('#validerProfesseurForm').css(\"display\", \"block\");\n    });\n  });\n\n  $('#validerProfesseurForm').submit(function (e) {\n    e.preventDefault();\n    var nom = document.querySelector('#ajouterProfesseurForm input[name=\"nom\"]').value.toLowerCase();\n    var prenom = document.querySelector('#ajouterProfesseurForm input[name=\"prenom\"]').value.toLowerCase();\n    var grade = document.querySelector('#ajouterProfesseurForm input[name=\"grade\"]').value.toLowerCase();\n    var login = document.querySelector('#validerProfesseurForm input[name=\"login\"]').value;\n    var password = document.querySelector('#validerProfesseurForm input[name=\"password\"]').value;\n    $.post(\"/users/validerProfesseur\", {\n      \"nom\": nom,\n      \"prenom\": prenom,\n      \"login\": login,\n      \"password\": password,\n      \"grade\": grade\n    }, function () {\n      console.log('ok');\n      $('#validerProfesseurForm')[0].reset();\n      $('#ajouterProfesseurForm')[0].reset();\n      refreshProfesseurs();\n    });\n  });\n  /*\n  **************************\n        affichage de la table\n   **************************\n   */\n\n  function formatColles(d) {\n    // `d` is the original data object for the row\n    var table = '<table cellpadding=\"5\" cellspacing=\"0\" border=\"0\" style=\"padding-left:50px;\">';\n    for (var i = 0; i < d.colles.length; i++) {\n      table += '<tr>' + '<td>colles:</td>' + '<td>' + d.colles[i].classe + '-' + d.colles[i].matiere + '</td>' + '</tr>';\n    }\n\n    table += '</table>';\n    return table;\n  };\n\n  function initDataTablesProfesseurs() {\n    var liste = [];\n    var table = $('#tableProfesseurs').DataTable({\n      data: liste,\n      dom: 'Bfrtip',\n      buttons: ['csv', 'excel', 'pdf'],\n      language: {\n        processing: \"Traitement en cours...\",\n        search: \"Rechercher&nbsp;:\",\n        lengthMenu: \"Afficher _MENU_ &eacute;l&eacute;ments\",\n        info: \"Affichage de l'&eacute;lement _START_ &agrave; _END_ sur _TOTAL_ &eacute;l&eacute;ments\",\n        infoEmpty: \"Affichage de l'&eacute;lement 0 &agrave; 0 sur 0 &eacute;l&eacute;ments\",\n        infoFiltered: \"(filtr&eacute; de _MAX_ &eacute;l&eacute;ments au total)\",\n        infoPostFix: \"\",\n        loadingRecords: \"Chargement en cours...\",\n        zeroRecords: \"Aucun &eacute;l&eacute;ment &agrave; afficher\",\n        emptyTable: \"Aucune donnée disponible dans le tableau\",\n        paginate: {\n          first: \"Premier\",\n          previous: \"Pr&eacute;c&eacute;dent\",\n          next: \"Suivant\",\n          last: \"Dernier\"\n        },\n        aria: {\n          sortAscending: \": activer pour trier la colonne par ordre croissant\",\n          sortDescending: \": activer pour trier la colonne par ordre décroissant\"\n        }\n      },\n\n      columns: [{\n        data: null,\n        render: function render(data, type, row) {\n          // Combine the first and last names into a single table field\n          return data.prenom + ' ' + data.nom;\n        }\n      }, {\n        data: 'login'\n      }, {\n        data: null,\n        render: function render(data, type, row) {\n          if (data.changePwd === true) {\n            return '....';\n          } else {\n            return data.password;\n          }\n        }\n      }, {\n        data: 'grade'\n      }, {\n        data: 'email'\n      }, {\n        \"className\": 'details-control',\n        \"orderable\": false,\n        \"data\": null,\n        \"defaultContent\": ''\n      }, {\n        data: null,\n        className: \"center\",\n        defaultContent: '<a href=\"\" class=\"editor_edit\">Edit</a>'\n      }],\n      order: [[0, \"asc\"]]\n    });\n\n    // Edit record\n    $('#tableProfesseurs').on('click', 'a.editor_edit', function (e) {\n      e.preventDefault();\n      console.log($(this).closest('tr'));\n      $('#modifierProfesseur').modal();\n    });\n\n    $('#tableProfesseurs tbody').on('click', 'td.details-control', function () {\n      var tr = $(this).closest('tr');\n      var row = table.row(tr);\n      if (row.child.isShown()) {\n        // This row is already open - close it\n        row.child.hide();\n        tr.removeClass('shown');\n      } else {\n        // Open this row\n        row.child(formatColles(row.data())).show();\n        tr.addClass('shown');\n      }\n    });\n  };\n\n  /*\n     **************************\n           Script pour afficher la table professeurs\n      **************************\n      */\n  function refreshProfesseurs() {\n    $.get(\"/admin/tableProfesseursJSON/\", function (data) {\n\n      //on met à jour les datalistes correspondantes\n      var el3 = document.getElementById('dataListe3');\n      dataListe.setDataListe(el3, data);\n      var table = $('#tableProfesseurs').DataTable({ retrieve: true });\n\n      table.clear().draw();\n      table.rows.add(data); // Add new data\n      table.columns.adjust().draw(); // Redraw the DataTable\n    });\n  };\n\n  /*\n  **************************\n        PUBLIC\n   **************************\n   */\n\n  self.init = function () {\n    initDataTablesProfesseurs();\n    refreshProfesseurs();\n  };\n\n  return self;\n}();\n\nmodule.exports = professeurs;\n\n//# sourceURL=webpack:///./src/admin/param/professeurs.js?");

/***/ }),

/***/ "./src/admin/ramassages/decompteHeures.js":
/*!************************************************!*\
  !*** ./src/admin/ramassages/decompteHeures.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar decompteHeures = function () {\n\n  var self = {};\n  var dataListe = __webpack_require__(/*! ../../misc/dataListe.js */ \"./src/misc/dataListe.js\");\n  /*\n  **************************\n        PRIVATE\n   **************************\n  \n   ********************************************************************\n         Choix de la periode\n   ************************************************************\n         */\n\n  var el5 = document.getElementById('dataListe5');\n  dataListe.selectId(el5);\n  $('#dataListe5Form').submit(function (e) {\n    e.preventDefault();\n    var idPeriode = dataListe.getId(el5);\n    if (idPeriode != '') {\n      $('#showTableDecompte').css(\"display\", \"block\");\n      $.post(\"/admin/decompteHeuresJSON/\", { 'idPeriode': idPeriode }, function (data) {\n        refreshTableBilan(data);\n      });\n    } else {\n      $('#showTableDecompte').css(\"display\", \"none\");\n    }\n  });\n\n  /*\n  **************************\n      fonction permettant d'afficher la liste des colles pour une matière/classe donnée\n   **************************\n   */\n\n  // function formatDetailBilan(d) {\n  //   // `d` is the original data object for the row\n  //   // `d` is the original data object for the row\n  //   let table = '<table cellpadding=\"5\" cellspacing=\"0\" border=\"0\" style=\"padding-left:50px;\">';\n  //   for (let i = 0; i < d.bilan.length; i++) {\n  //     table +=\n  //       '<tr>' +\n  //       '<td>' + d.bilan[i].classe + ' ( ' + d.bilan[i].duree + ' ) ' + '</td>' +\n  //       '<td>' + d.bilan[i].count + '</td>' +\n  //       '<td>' + Math.floor(d.bilan[i].heures / 60) + 'h' + d.bilan[i].heures % 60 + 'mn' + '</td>' +\n  //       '</tr>';\n  //   }\n  //\n  //   table += '</table>';\n  //   return table;\n  // };\n\n  /*\n  **************************\n        Script pour afficher le bilan des heures effectuées sur une période\n   **************************\n   */\n  function initDataTablesBilan() {\n    var liste = [];\n    var table = $('#tableDecompte').DataTable({\n      dom: 'Bfrtip',\n      buttons: ['csv', 'excel', 'pdf'],\n      data: liste,\n      // dom : '<\"top\"Bif>rt<\"bottom\"lp><\"clear\">',\n      language: {\n        processing: \"Traitement en cours...\",\n        search: \"Rechercher&nbsp;:\",\n        lengthMenu: \"Afficher _MENU_ &eacute;l&eacute;ments\",\n        info: \"Affichage de l'&eacute;lement _START_ &agrave; _END_ sur _TOTAL_ &eacute;l&eacute;ments\",\n        infoEmpty: \"Affichage de l'&eacute;lement 0 &agrave; 0 sur 0 &eacute;l&eacute;ments\",\n        infoFiltered: \"(filtr&eacute; de _MAX_ &eacute;l&eacute;ments au total)\",\n        infoPostFix: \"\",\n        loadingRecords: \"Chargement en cours...\",\n        zeroRecords: \"Aucun &eacute;l&eacute;ment &agrave; afficher\",\n        emptyTable: \"Aucune donnée disponible dans le tableau\",\n        paginate: {\n          first: \"Premier\",\n          previous: \"Pr&eacute;c&eacute;dent\",\n          next: \"Suivant\",\n          last: \"Dernier\"\n        },\n        aria: {\n          sortAscending: \": activer pour trier la colonne par ordre croissant\",\n          sortDescending: \": activer pour trier la colonne par ordre décroissant\"\n        }\n      },\n\n      columns: [{\n        data: null,\n        render: function render(data, type, row) {\n          // Combine the first and last names into a single table field\n          return data.nom + ' ' + data.prenom;\n        }\n      }, {\n        data: 'grade'\n      }, {\n        data: null,\n        render: function render(data, type, row) {\n          // Combine the first and last names into a single table field\n          var ind = data.bilan.findIndex(function (i) {\n            return i.taux === 1;\n          });\n          if (ind !== -1) return parseInt(data.bilan[ind].heures * 100 / 60) / 100;\n        }\n      }, {\n        data: null,\n        render: function render(data, type, row) {\n          // Combine the first and last names into a single table field\n          var ind = data.bilan.findIndex(function (i) {\n            return i.taux === 2;\n          });\n          if (ind !== -1) return parseInt(data.bilan[ind].heures * 100 / 60) / 100;\n        }\n      }, {\n        data: null,\n        render: function render(data, type, row) {\n          // Combine the first and last names into a single table field\n          var ind = data.bilan.findIndex(function (i) {\n            return i.taux === 3;\n          });\n          if (ind !== -1) return parseInt(data.bilan[ind].heures * 100 / 60) / 100;\n        }\n      }, {\n        data: null,\n        render: function render(data, type, row) {\n          // Combine the first and last names into a single table field\n          var ind = data.bilan.findIndex(function (i) {\n            return i.taux === 4;\n          });\n          if (ind !== -1) return parseInt(data.bilan[ind].heures * 100 / 60) / 100;\n        }\n      }, {\n        data: null,\n        render: function render(data, type, row) {\n          // Combine the first and last names into a single table field\n          var ind = data.bilan.findIndex(function (i) {\n            return i.taux === 5;\n          });\n          if (ind !== -1) return parseInt(data.bilan[ind].heures * 100 / 60) / 100;\n        }\n      }, {\n        data: null,\n        render: function render(data, type, row) {\n          // Combine the first and last names into a single table field\n          var ind = data.bilan.findIndex(function (i) {\n            return i.taux === 6;\n          });\n          if (ind !== -1) return parseInt(data.bilan[ind].heures * 100 / 60) / 100;\n        }\n      }],\n\n      order: [[0, \"asc\"]]\n    });\n  };\n\n  /*\n  ********************************************************************\n    Mise à jour de la table bilan\n  ************************************************************\n    */\n  function refreshTableBilan(data) {\n    var table = $('#tableDecompte').DataTable({ retrieve: true });\n    table.clear().draw();\n    table.rows.add(data); // Add new data\n    table.columns.adjust().draw(); // Redraw the DataTable\n  }\n\n  /*\n  **************************\n        PUBLIC\n   **************************\n   */\n\n  self.init = function () {\n    initDataTablesBilan();\n  };\n\n  return self;\n}();\n\nmodule.exports = decompteHeures;\n\n//# sourceURL=webpack:///./src/admin/ramassages/decompteHeures.js?");

/***/ }),

/***/ "./src/admin/ramassages/periodes.js":
/*!******************************************!*\
  !*** ./src/admin/ramassages/periodes.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar periodes = function () {\n\n  var self = {};\n  var dataListe = __webpack_require__(/*! ../../misc/dataListe.js */ \"./src/misc/dataListe.js\");\n\n  /*\n  **************************\n        PRIVATE\n   **************************\n   */\n\n  document.getElementById(\"buttonAddPeriode\").addEventListener('click', function () {\n    $('#addPeriodeModal').modal();\n  });\n\n  function initDataTablesPeriodes() {\n    var liste = [];\n    $.fn.dataTable.moment('DD/MM/YYYY');\n    var table = $('#tablePeriodes').DataTable({\n      data: liste,\n      paging: false,\n      ordering: false,\n      info: false,\n      searching: false,\n      language: {\n        zeroRecords: \"Aucun &eacute;l&eacute;ment &agrave; afficher\",\n        emptyTable: \"Aucune donnée disponible dans le tableau\"\n      },\n      columns: [{\n        data: 'description'\n      }, {\n        data: 'debutPeriode',\n        render: function render(data, type, row) {\n          return moment(data).format(\"DD/MM/YYYY\");\n        }\n      }, {\n        data: 'finPeriode',\n        render: function render(data, type, row) {\n          return moment(data).format(\"DD/MM/YYYY\");\n        }\n      }, {\n        data: null,\n        className: \"center\",\n        defaultContent: '<a href=\"\" class=\"editor_edit\">Edit</a>/<a href=\"\" class=\"editor_supp\">Supp</a>'\n\n      }],\n      order: [[1, \"asc\"]]\n\n    });\n\n    // Edit record\n    $('#tablePeriodes').on('click', 'a.editor_edit', function (e) {\n      e.preventDefault();\n      var tr = $(this).closest('tr');\n      var row = table.row(tr);\n      var element = row.data();\n      var description = element.description;\n      var debutPeriode = element.debutPeriode;\n      var finPeriode = element.finPeriode;\n      var id = element._id;\n      var idPrevious = '';\n      var idNext = '';\n      if (tr[0].previousSibling !== null) {\n        var trPrevious = $(tr[0].previousSibling);\n        var rowPrevious = table.row(trPrevious);\n        var elementPrevious = rowPrevious.data();\n        idPrevious = elementPrevious._id;\n      }\n      if (tr[0].nextSibling !== null) {\n        var trNext = $(tr[0].nextSibling);\n        var rowNext = table.row(trNext);\n        var elementNext = rowNext.data();\n        idNext = elementNext._id;\n      }\n      $(document.getElementById('debutPeriode')).val(moment(debutPeriode).format('DD/MM/YYYY'));\n      $(document.getElementById('finPeriode')).val(moment(finPeriode).format('DD/MM/YYYY'));\n      $(document.getElementById('descriptionPeriode')).val(description);\n      document.getElementById('addPeriodeForm').setAttribute(\"data-id\", id);\n      document.getElementById('addPeriodeForm').setAttribute(\"data-idprevious\", idPrevious);\n      document.getElementById('addPeriodeForm').setAttribute(\"data-idnext\", idNext);\n      $('#datetimepicker3').datetimepicker('minDate', moment(debutPeriode).format('L'));\n      $('#datetimepicker3').datetimepicker('maxDate', moment(finPeriode).format('L'));\n      $('#addPeriodeModal').modal();\n    });\n\n    // Supp record\n    $('#tablePeriodes').on('click', 'a.editor_supp', function (e) {\n      e.preventDefault();\n      var tr = $(this).closest('tr');\n      var row = table.row(tr);\n      var element = row.data();\n      var idPeriode = element._id;\n      var idNext = '';\n      var dateFinPrevious = moment($('#datetimepicker1').find(\"input\").val(), 'DD/MM/YYYY').format(); //on prend le debut de l'année si une seule periode de définie\n      if (tr[0].previousSibling !== null) {\n        var trPrevious = $(tr[0].previousSibling);\n        var rowPrevious = table.row(trPrevious);\n        var elementPrevious = rowPrevious.data();\n        dateFinPrevious = elementPrevious.finPeriode; //on prend la date de fin de periode précédente\n      }\n      if (tr[0].nextSibling !== null) {\n        var trNext = $(tr[0].nextSibling);\n        var rowNext = table.row(trNext);\n        var elementNext = rowNext.data();\n        idNext = elementNext._id;\n      }\n      console.log(dateFinPrevious);\n      suppPeriode(idPeriode, idNext, dateFinPrevious);\n    });\n  };\n\n  /*\n    Mise à jour dataTables\n  */\n  function refreshTablePeriodes(data) {\n    var table = $('#tablePeriodes').DataTable({ retrieve: true });\n    table.clear().draw();\n    table.rows.add(data); // Add new data\n    table.columns.adjust().draw(); // Redraw the DataTable\n  };\n\n  /*\n    Définition de l'année scolaire\n  */\n\n  $('#datetimepicker1').datetimepicker({\n    format: 'L'\n  });\n  $('#datetimepicker2').datetimepicker({\n    format: 'L',\n    useCurrent: false\n  });\n\n  $(\"#datetimepicker1\").on(\"change.datetimepicker\", function (e) {\n    $('#datetimepicker2').datetimepicker('minDate', e.date);\n  });\n  $(\"#datetimepicker2\").on(\"change.datetimepicker\", function (e) {\n    $('#datetimepicker1').datetimepicker('maxDate', e.date);\n  });\n\n  //pour ajouter une periode\n  $('#datetimepicker3').datetimepicker({\n    format: 'L',\n    useCurrent: false\n  });\n\n  /*\n    Validation du formulaire et enregistrement de la période annuelle\n  */\n  $('#defAnneeForm').submit(function (e) {\n    e.preventDefault();\n    var debutAnnee = $('#datetimepicker1').find(\"input\").val();\n    var finAnnee = $('#datetimepicker2').find(\"input\").val();\n    $.post(\"/admin/defAnnee/\", {\n      'debutAnnee': debutAnnee,\n      'finAnnee': finAnnee\n    }, function () {\n      lirePeriodes();\n    });\n  });\n\n  /*\n    LEcture des données pour mettre à jour les périodes\n  */\n\n  function lirePeriodes() {\n    $.get(\"/admin/getAnnee/\", function (data) {\n      if (typeof data.annee === 'undefined' || typeof data.annee.debut === 'undefined' && typeof data.annee.fin === 'undefined') {\n        //annee non definie\n      } else {\n        var debutAnnee = $('#datetimepicker1').find(\"input\").val(moment(data.annee.debut).format('DD/MM/YYYY'));\n        var finAnnee = $('#datetimepicker2').find(\"input\").val(moment(data.annee.fin).format('DD/MM/YYYY'));\n        document.getElementById(\"defPeriodesRamassages\").style.display = \"block\";\n        var _periodes = data.periodes;\n        var dateInitAddPeriode = void 0;\n        var n = 0;\n        if (typeof _periodes !== 'undefined' && _periodes.length !== 0) {\n          n = data.periodes.length;\n          var d = moment(data.periodes[n - 1].finPeriode).add(1, 'days');\n          dateInitAddPeriode = d.format();\n        } else {\n          dateInitAddPeriode = data.annee.debut;\n        }\n        refreshTablePeriodes(_periodes);\n        $(document.getElementById('debutPeriode')).val(moment(dateInitAddPeriode).format('DD/MM/YYYY'));\n        $('#datetimepicker3').datetimepicker('maxDate', moment(data.annee.fin).format('L'));\n        $('#datetimepicker3').datetimepicker('minDate', moment(dateInitAddPeriode).format('L'));\n        //on met à jour la dataliste des periodes\n        var el5 = document.getElementById('dataListe5');\n        dataListe.setDataListe(el5, _periodes);\n      }\n    });\n  };\n\n  /*\n    formulaire pour ajouter une période\n  */\n  $('#addPeriodeForm').submit(function (e) {\n    e.preventDefault();\n    var debutPeriode = moment(document.getElementById('debutPeriode').value, 'DD/MM/YYYY').format();\n    var finPeriode = moment(document.getElementById('finPeriode').value, 'DD/MM/YYYY').format();\n    var description = document.getElementById('descriptionPeriode').value;\n    var id = document.getElementById('addPeriodeForm').getAttribute(\"data-id\");\n    var idPrevious = '';\n    var idNext = '';\n    if (id !== '') {\n      idPrevious = document.getElementById('addPeriodeForm').getAttribute(\"data-idprevious\");\n      idNext = document.getElementById('addPeriodeForm').getAttribute(\"data-idnext\");\n    }\n\n    $.post(\"/admin/sauvePeriode/\", {\n      'debutPeriode': debutPeriode,\n      'finPeriode': finPeriode,\n      'description': description,\n      'id': id,\n      'idPrevious': idPrevious,\n      'idNext': idNext\n    }, function (err) {\n      document.getElementById('addPeriodeForm').reset();\n      $('#addPeriodeModal').modal('hide');\n      lirePeriodes();\n    });\n  });\n\n  function suppPeriode(idPeriode, idNext, dateFinPrevious) {\n    $.post(\"/admin/suppPeriode/\", {\n      'idPeriode': idPeriode,\n      'idNext': idNext,\n      'dateFinPrevious': dateFinPrevious\n    }, function (err) {\n      console.log('test');\n      lirePeriodes();\n    });\n  }\n\n  /*\n  **************************\n        PUBLIC\n   **************************\n   */\n\n  self.init = function () {\n    initDataTablesPeriodes();\n    lirePeriodes();\n  };\n\n  return self;\n}();\n\nmodule.exports = periodes;\n\n//# sourceURL=webpack:///./src/admin/ramassages/periodes.js?");

/***/ }),

/***/ "./src/admin/structure.js":
/*!********************************!*\
  !*** ./src/admin/structure.js ***!
  \********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar structure = function () {\n\n  var self = {};\n\n  /*\n  **************************\n        PRIVATE\n   **************************\n   */\n\n  /*\n    Validation du formulaire et enregistrement du niveau\n  */\n  $('#niveauForm').submit(function (e) {\n    e.preventDefault();\n    var idClasse = document.getElementById('niveauForm').getAttribute(\"data-idclasse\");\n    var niveau = document.querySelector('#niveauForm input[name=\"niveau\"]:checked').value;\n    $.post(\"/admin/niveau/\", {\n      'idClasse': idClasse,\n      'niveau': niveau\n    }, function () {\n      refreshStructure();\n    });\n  });\n\n  /*\n  **************************\n        Script pour afficher la sructure des classes\n   **************************\n   */\n  function initDataTablesStructure() {\n    var liste = [];\n    var table = $('#tableStructure').DataTable({\n      data: liste,\n      // dom : '<\"top\"Bif>rt<\"bottom\"lp><\"clear\">',\n      language: {\n        processing: \"Traitement en cours...\",\n        search: \"Rechercher&nbsp;:\",\n        lengthMenu: \"Afficher _MENU_ &eacute;l&eacute;ments\",\n        info: \"Affichage de l'&eacute;lement _START_ &agrave; _END_ sur _TOTAL_ &eacute;l&eacute;ments\",\n        infoEmpty: \"Affichage de l'&eacute;lement 0 &agrave; 0 sur 0 &eacute;l&eacute;ments\",\n        infoFiltered: \"(filtr&eacute; de _MAX_ &eacute;l&eacute;ments au total)\",\n        infoPostFix: \"\",\n        loadingRecords: \"Chargement en cours...\",\n        zeroRecords: \"Aucun &eacute;l&eacute;ment &agrave; afficher\",\n        emptyTable: \"Aucune donnée disponible dans le tableau\",\n        paginate: {\n          first: \"Premier\",\n          previous: \"Pr&eacute;c&eacute;dent\",\n          next: \"Suivant\",\n          last: \"Dernier\"\n        },\n        aria: {\n          sortAscending: \": activer pour trier la colonne par ordre croissant\",\n          sortDescending: \": activer pour trier la colonne par ordre décroissant\"\n        }\n      },\n\n      columns: [{\n        data: 'nom'\n      }, {\n        data: 'niveau'\n      }, {\n        data: 'totalEleves'\n      }, {\n        data: 'taux'\n      }, {\n        data: null,\n        className: \"center\",\n        defaultContent: '<a href=\"\" class=\"editor_edit\">Edit</a>'\n\n      }]\n    });\n\n    // Edit record\n    $('#tableStructure').on('click', 'a.editor_edit', function (e) {\n      e.preventDefault();\n      var tr = $(this).closest('tr');\n      var row = table.row(tr);\n      var element = row.data();\n      var idClasse = element.idClasse;\n      var classe = element.nom;\n      document.getElementById('niveauForm').setAttribute(\"data-idclasse\", idClasse);\n      $('#niveauClasse').modal();\n    });\n  };\n\n  function refreshStructure() {\n    $.get(\"/admin/tableStructureJSON/\", function (data) {\n      var table = $('#tableStructure').DataTable({\n        retrieve: true\n      });\n      table.clear().draw();\n      table.rows.add(data); // Add new data\n      table.columns.adjust().draw(); // Redraw the DataTable\n    });\n  };\n\n  /*\n     **************************\n          Opérations diverses sur la base\n      **************************\n  */\n  $(\"#nettoyer\").click(function () {\n    document.getElementById('confirmerMessage').setAttribute(\"data-param\", \"nettoyer\");\n    $('#message').empty();\n    $('#message').append('Les élèves non affectés à une classe seront supprimés de la base');\n  });\n\n  $(\"#rafraichir\").click(function () {\n    document.getElementById('confirmerMessage').setAttribute(\"data-param\", \"rafraichir\");\n    $('#message').empty();\n    $('#message').append('Recherche de nouvelles classes');\n  });\n\n  $(\"#actionConfirmee\").click(function () {\n    var action = document.getElementById('confirmerMessage').getAttribute(\"data-param\");\n    if (action === 'nettoyer') {\n      $.get(\"/admin/nettoyerBaseEleve/\", function () {\n        refreshStructure();\n      });\n    };\n    if (action === 'rafraichir') {\n      $.get(\"/users/rafraichirBaseStructure/\", function () {\n        refreshStructure();\n      });\n    };\n  });\n  /*\n  **************************\n        PUBLIC\n   **************************\n   */\n\n  self.init = function () {\n    initDataTablesStructure();\n    refreshStructure();\n  };\n\n  return self;\n}();\n\nmodule.exports = structure;\n\n//# sourceURL=webpack:///./src/admin/structure.js?");

/***/ }),

/***/ "./src/eleve.js":
/*!**********************!*\
  !*** ./src/eleve.js ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar eleve = function () {\n\n  var self = {};\n  var idEleve = document.body.getAttribute(\"data-ideleve\");\n  var classe = document.body.getAttribute(\"data-classe\");\n\n  /*\n  **************************\n        PRIVATE\n   **************************\n   */\n\n  function menu() {\n\n    $('#navCompte').on('click', function () {\n      $(\".visible\").css(\"display\", \"none\");\n      $(\"#modifyPassword\").css(\"display\", \"block\");\n    });\n  }\n\n  /*\n  **************************\n        PUBLIC\n   **************************\n   */\n\n  self.init = function () {\n    menu();\n    console.log(idEleve);\n    var synthese = __webpack_require__(/*! ./eleve/synthese.js */ \"./src/eleve/synthese.js\");\n    synthese.init();\n    var programme = __webpack_require__(/*! ./eleve/programme.js */ \"./src/eleve/programme.js\");\n    programme.init();\n  };\n\n  return self;\n}();\n\nmodule.exports = eleve;\n\n//# sourceURL=webpack:///./src/eleve.js?");

/***/ }),

/***/ "./src/eleve/programme.js":
/*!********************************!*\
  !*** ./src/eleve/programme.js ***!
  \********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar programme = function () {\n\n  var self = {};\n  var classe = document.body.getAttribute(\"data-classe\");\n\n  /*\n  ********************************************************************\n        PRIVE\n  ************************************************************\n  \n  /*\n  ********************************************************************\n    Mise à jour de la table des colles\n  ************************************************************\n  */\n  function refreshTableProgrammeEleve() {\n    $.post(\"/eleve/tableProgrammeEleveJSON/\", {\n      'classe': classe\n    }, function (data) {\n      $('#tableProgrammeEleve').DataTable().clear().draw();\n      $('#tableProgrammeEleve').DataTable().rows.add(data); // Add new data\n      $('#tableProgrammeEleve').DataTable().columns.adjust().draw(); // Redraw the DataTable\n    });\n  }\n\n  function detailProgrammeEleve(d) {\n    // `d` is the original data object for the row\n    return '<table cellpadding=\"5\" cellspacing=\"0\" border=\"0\" style=\"padding-left:50px;\">' + '<tr>' + '<td>Détail:</td>' + '<td>' + d.detail + '</td>' + '</tr>' + '</table>';\n  };\n\n  function initDataTablesProgrammeEleve() {\n    var liste = [];\n    $.fn.dataTable.moment('DD/MM/YYYY');\n    var table = $('#tableProgrammeEleve').DataTable({\n      retrieve: true,\n      data: liste,\n      // dom : '<\"top\"Bif>rt<\"bottom\"lp><\"clear\">',\n      language: {\n        processing: \"Traitement en cours...\",\n        search: \"Rechercher&nbsp;:\",\n        lengthMenu: \"Afficher _MENU_ &eacute;l&eacute;ments\",\n        info: \"Affichage de l'&eacute;lement _START_ &agrave; _END_ sur _TOTAL_ &eacute;l&eacute;ments\",\n        infoEmpty: \"Affichage de l'&eacute;lement 0 &agrave; 0 sur 0 &eacute;l&eacute;ments\",\n        infoFiltered: \"(filtr&eacute; de _MAX_ &eacute;l&eacute;ments au total)\",\n        infoPostFix: \"\",\n        loadingRecords: \"Chargement en cours...\",\n        zeroRecords: \"Aucun &eacute;l&eacute;ment &agrave; afficher\",\n        emptyTable: \"Aucune donnée disponible dans le tableau\",\n        paginate: {\n          first: \"Premier\",\n          previous: \"Pr&eacute;c&eacute;dent\",\n          next: \"Suivant\",\n          last: \"Dernier\"\n        },\n        aria: {\n          sortAscending: \": activer pour trier la colonne par ordre croissant\",\n          sortDescending: \": activer pour trier la colonne par ordre décroissant\"\n        }\n      },\n\n      columns: [{\n        data: 'matiere'\n      }, {\n        data: null,\n        render: function render(data, type, row) {\n          // Combine the first and last names into a single table field\n          return data.nom + ' ' + data.prenom;\n        }\n      }, {\n        data: null,\n        render: function render(data, type, row) {\n          return moment(data.debut).format(\"DD/MM/YYYY\");\n        }\n      }, {\n        data: null,\n        render: function render(data, type, row) {\n          return moment(data.fin).format(\"DD/MM/YYYY\");\n        }\n      }, {\n        data: \"titre\"\n      }, {\n        \"className\": 'details-control',\n        \"orderable\": false,\n        \"data\": null,\n        \"defaultContent\": ''\n      }]\n    });\n\n    $('#tableProgrammeEleve tbody').on('click', 'td.details-control', function () {\n      var tr = $(this).closest('tr');\n      var row = table.row(tr);\n      if (row.child.isShown()) {\n        // This row is already open - close it\n        row.child.hide();\n        tr.removeClass('shown');\n      } else {\n        // Open this row\n        row.child(detailProgrammeEleve(row.data())).show();\n        tr.addClass('shown');\n      }\n    });\n  };\n\n  /*\n  ********************************************************************\n        PUBLIC\n  ************************************************************\n  */\n\n  self.init = function () {\n    initDataTablesProgrammeEleve();\n    refreshTableProgrammeEleve();\n  };\n  return self;\n}();\n\nmodule.exports = programme;\n\n//# sourceURL=webpack:///./src/eleve/programme.js?");

/***/ }),

/***/ "./src/eleve/synthese.js":
/*!*******************************!*\
  !*** ./src/eleve/synthese.js ***!
  \*******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar synthese = function () {\n\n  var self = {};\n  var idEleve = document.body.getAttribute(\"data-ideleve\");\n  var classe = document.body.getAttribute(\"data-classe\");\n\n  /*\n  ********************************************************************\n        PRIVE\n  ************************************************************\n  \n  \n  /*\n  **************************\n      fonction permettant d'afficher la liste des colles\n   **************************\n   */\n\n  function format(d) {\n    // `d` is the original data object for the row\n    return '<table cellpadding=\"5\" cellspacing=\"0\" border=\"0\" style=\"padding-left:50px;\">' + '<tr>' + '<td>Sujet:</td>' + '<td>' + d.sujet + '</td>' + '</tr>' + '<tr>' + '<td>obs. élève:</td>' + '<td>' + d.obsEleve + '</td>' + '</tr>' + '</table>';\n  };\n\n  function initDataTablesColles() {\n    var liste = [];\n    $.fn.dataTable.moment('DD/MM/YYYY');\n    var table = $('#tableColles').DataTable({\n      retrieve: true,\n      data: liste,\n      // dom : '<\"top\"Bif>rt<\"bottom\"lp><\"clear\">',\n      language: {\n        processing: \"Traitement en cours...\",\n        search: \"Rechercher&nbsp;:\",\n        lengthMenu: \"Afficher _MENU_ &eacute;l&eacute;ments\",\n        info: \"Affichage de l'&eacute;lement _START_ &agrave; _END_ sur _TOTAL_ &eacute;l&eacute;ments\",\n        infoEmpty: \"Affichage de l'&eacute;lement 0 &agrave; 0 sur 0 &eacute;l&eacute;ments\",\n        infoFiltered: \"(filtr&eacute; de _MAX_ &eacute;l&eacute;ments au total)\",\n        infoPostFix: \"\",\n        loadingRecords: \"Chargement en cours...\",\n        zeroRecords: \"Aucun &eacute;l&eacute;ment &agrave; afficher\",\n        emptyTable: \"Aucune donnée disponible dans le tableau\",\n        paginate: {\n          first: \"Premier\",\n          previous: \"Pr&eacute;c&eacute;dent\",\n          next: \"Suivant\",\n          last: \"Dernier\"\n        },\n        aria: {\n          sortAscending: \": activer pour trier la colonne par ordre croissant\",\n          sortDescending: \": activer pour trier la colonne par ordre décroissant\"\n        }\n      },\n      order: [],\n      columns: [{\n        data: 'matiere',\n        orderable: false\n      }, {\n        data: null,\n        orderable: false,\n        render: function render(data, type, row) {\n          // Combine the first and last names into a single table field\n          return data.nomP + ' ' + data.prenomP;\n        }\n      }, {\n        data: null,\n        orderable: false,\n        render: function render(data, type, row) {\n          if (data.note === null) {\n            return data.noNote;\n          }\n          return data.note;\n        }\n      }, {\n        data: \"date\",\n        render: function render(data, type, row) {\n          if (type === \"sort\" || type === \"type\") {\n            return data;\n          }\n          return moment(data).format(\"DD/MM/YYYY\");\n        }\n      }, {\n        \"className\": 'details-control',\n        \"orderable\": false,\n        \"data\": null,\n        \"defaultContent\": ''\n      }]\n    });\n\n    $('#tableColles tbody').on('click', 'td.details-control', function () {\n      var tr = $(this).closest('tr');\n      var row = table.row(tr);\n      if (row.child.isShown()) {\n        // This row is already open - close it\n        row.child.hide();\n        tr.removeClass('shown');\n      } else {\n        // Open this row\n        row.child(format(row.data())).show();\n        tr.addClass('shown');\n      }\n    });\n  };\n\n  /*\n  ********************************************************************\n    Mise à jour de la table des colles\n  ************************************************************\n    */\n  function refreshTableColles() {\n    $.post(\"/eleve/tableCollesJSON/\", {\n      'idEleve': idEleve,\n      'classe': classe\n    }, function (data) {\n      console.log(data);\n      $('#tableColles').DataTable().clear().draw();\n      $('#tableColles').DataTable().rows.add(data); // Add new data\n      $('#tableColles').DataTable().columns.adjust().draw(); // Redraw the DataTable\n    });\n  }\n  /*\n  ********************************************************************\n        PUBLIC\n  ************************************************************\n  */\n\n  self.init = function () {\n    initDataTablesColles();\n    refreshTableColles();\n  };\n\n  return self;\n}();\n\nmodule.exports = synthese;\n\n//# sourceURL=webpack:///./src/eleve/synthese.js?");

/***/ }),

/***/ "./src/etablissement.js":
/*!******************************!*\
  !*** ./src/etablissement.js ***!
  \******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar etablissement = function () {\n  var self = {};\n  var dataListe = __webpack_require__(/*! ./misc/dataListe.js */ \"./src/misc/dataListe.js\");\n\n  /*\n  **************************\n        PRIVATE\n   **************************\n   */\n\n  /*\n  **************************\n        PUBLIC\n   **************************\n   */\n\n  self.init = function () {\n\n    var el1 = document.querySelector('#dataListe1'); //liste des établissements\n    dataListe.set(el1, {\n      'form': true\n    });\n\n    $('#dataListe1Form').submit(function (e) {\n      e.preventDefault();\n      var etablissement = dataListe.getName(el1);\n      var prefix = dataListe.getId(el1);\n      console.log(etablissement);\n      $.post(\"/choixEtab/\", {\n        'etablissement': etablissement,\n        'prefix': prefix\n      }, function () {\n        window.location.assign('/users/logout/');\n      });\n    });\n\n    dataListe.selectId(el1);\n\n    $.get(\"/listeEtablissementsJSON/\", function (data) {\n      dataListe.setDataListe(el1, data);\n    });\n\n    $('input').clearer(); //permet de réinitialiser les input\n  };\n\n  return self;\n}();\n\nmodule.exports = etablissement;\n\n//# sourceURL=webpack:///./src/etablissement.js?");

/***/ }),

/***/ "./src/forgot.js":
/*!***********************!*\
  !*** ./src/forgot.js ***!
  \***********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar forgot = function () {\n  var self = {};\n\n  /*\n  **************************\n        PRIVATE\n   **************************\n   */\n\n  var urlParams = new URLSearchParams(window.location.search);\n  var token = urlParams.get('token');\n  if (token !== null) {\n    document.getElementById('resetForm').setAttribute(\"data-token\", token);\n  }\n\n  $('#resetForm').submit(function (e) {\n    e.preventDefault();\n    var password = document.getElementById(\"resetForm\").elements.namedItem(\"password\").value;\n    var passwordConf = document.getElementById(\"resetForm\").elements.namedItem(\"passwordConf\").value;\n    var token = document.getElementById('resetForm').getAttribute(\"data-token\");\n    $.post(\"/users/reset/\", {\n      \"password\": password,\n      \"passwordConf\": passwordConf,\n      \"token\": token\n    }, function () {\n      window.location.assign('/');\n    });\n  });\n\n  /*\n  **************************\n        PUBLIC\n   **************************\n   */\n\n  self.init = function () {\n    var form = document.getElementById(\"form\").innerHTML;\n    if (form == 'forgot') {\n      $(\".visible\").css(\"display\", \"none\"); //tous les objets de classes visibles sont cachés\n      $(\"#forgot\").css(\"display\", \"block\");\n    } else {\n      $(\".visible\").css(\"display\", \"none\"); //tous les objets de classes visibles sont cachés\n      $(\"#reset\").css(\"display\", \"block\");\n    }\n  };\n\n  return self;\n}();\n\nmodule.exports = forgot;\n\n//# sourceURL=webpack:///./src/forgot.js?");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n$(document).ready(function () {\n\n  var professeur = __webpack_require__(/*! ./professeur.js */ \"./src/professeur.js\");\n  var eleve = __webpack_require__(/*! ./eleve.js */ \"./src/eleve.js\");\n  var admin = __webpack_require__(/*! ./admin.js */ \"./src/admin.js\");\n  var login = __webpack_require__(/*! ./login.js */ \"./src/login.js\");\n  var etablissement = __webpack_require__(/*! ./etablissement.js */ \"./src/etablissement.js\");\n\n  //gestion password forgot\n  var forgot = __webpack_require__(/*! ./forgot.js */ \"./src/forgot.js\");\n\n  //gestion password\n  var loginPassword = __webpack_require__(/*! ./loginPassword.js */ \"./src/loginPassword.js\");\n  loginPassword.init();\n\n  if ($('body').data(\"page\") === 'forgot') {\n    forgot.init();\n  }\n\n  if ($('body').data(\"page\") === 'professeur') {\n    professeur.init();\n  }\n  if ($('body').data(\"page\") === 'eleve') {\n    eleve.init();\n  }\n  if ($('body').data(\"page\") === 'admin') {\n    admin.init();\n  }\n  if ($('body').data(\"page\") === 'login') {\n    login.init();\n  }\n  if ($('body').data(\"page\") === 'home') {\n    etablissement.init();\n  }\n});\n\n//# sourceURL=webpack:///./src/index.js?");

/***/ }),

/***/ "./src/login.js":
/*!**********************!*\
  !*** ./src/login.js ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar login = function () {\n  var self = {};\n\n  /*\n  **************************\n        PRIVATE\n   **************************\n   */\n\n  /*\n  **************************\n      gestion des cookies\n   **************************\n   */\n\n  var cookieBanner = document.getElementById('cookie-banner');\n  var cookieInformAndAsk = document.getElementById('cookie-inform-and-ask');\n  var cookieMoreButton = document.getElementById('cookie-more-button');\n  var loginButton = document.getElementById('login-button');\n  var CancelButton = document.getElementById('cancel-button');\n  var ConfirmButton = document.getElementById('confirm-button');\n\n  function processCookieConsent() {\n\n    $(cookieBanner).addClass('active');\n    cookieMoreButton.addEventListener('click', onMoreButtonClick, false);\n    //document.addEventListener('click', onDocumentClick, false);\n    return;\n  }\n\n  function onMoreButtonClick(event) {\n    event.preventDefault();\n\n    // On affiche la boîte de dialogue permettant à l'utilisateur de faire son choix\n    cookieInformAndAsk.classList.add('active');\n\n    // On cache le bandeau\n    cookieBanner.className = cookieBanner.className.replace('active', '').trim();\n\n    // On crée les listeners sur les boutons de la boîte de dialogue\n    CancelButton.addEventListener('click', onCancelButtonClick, false);\n    ConfirmButton.addEventListener('click', onConfirmButtonClick, false);\n\n    // On supprime le listener sur la page et celui sur le bouton du bandeau\n    //document.removeEventListener('click', onDocumentClick, false);\n    cookieMoreButton.removeEventListener('click', onMoreButtonClick, false);\n  }\n\n  function onConfirmButtonClick(event) {\n    event.preventDefault();\n    //\n    //   // On crée le cookie signifiant le consentement de l'utilisateur et on démarre Google Analytics\n    //   Cookies.set('hasConsent', true, {\n    //     expires: 365\n    //   });\n    //   startGoogleAnalytics();\n    //\n    //   // On cache la boîte de dialogue\n    cookieInformAndAsk.className = cookieBanner.className.replace('active', '').trim();\n    //\n    //   // On supprime les listeners sur les boutons de la boîte de dialogue\n    CancelButton.removeEventListener('click', onCancelButtonClick, false);\n    ConfirmButton.removeEventListener('click', onConfirmButtonClick, false);\n  }\n  //\n  //\n  function onCancelButtonClick(event) {\n    event.preventDefault();\n    //\n    //   // On lance la procédure de refus de l'utilisation des cookies\n    //   reject();\n    //\n    //   // On cache la boîte de dialogue\n    cookieInformAndAsk.className = cookieBanner.className.replace('active', '').trim();\n\n    //   // On supprime les listeners sur les boutons de la boîte de dialogue\n    CancelButton.removeEventListener('click', onCancelButtonClick, false);\n    ConfirmButton.removeEventListener('click', onConfirmButtonClick, false);\n  }\n\n  /*\n  **************************\n        PUBLIC\n   **************************\n   */\n\n  self.init = function () {\n    $(\".visible\").css(\"display\", \"block\");\n    processCookieConsent();\n  };\n\n  return self;\n}();\n\nmodule.exports = login;\n\n//# sourceURL=webpack:///./src/login.js?");

/***/ }),

/***/ "./src/loginPassword.js":
/*!******************************!*\
  !*** ./src/loginPassword.js ***!
  \******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar loginPassword = function () {\n  var self = {};\n\n  /*\n  **************************\n        PRIVATE\n   **************************\n   */\n\n  $('#modifyPasswordForm').submit(function (e) {\n    e.preventDefault();\n    var password = document.querySelector('#modifyPasswordForm input[name=\"password\"]').value;\n    var passwordConf = document.querySelector('#modifyPasswordForm input[name=\"passwordConf\"]').value;\n    var regexp = /^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])([a-zA-Z0-9]{8,})$/;\n    if (password.match(regexp) == null) {\n      $('#error').html('le mot de passe doit contenir au minimum 8 caratères dont une majuscule, une minuscule et un chiffre.');\n      $('#erreur').modal();\n    } else if (password !== passwordConf) {\n      $('#error').html('les mots de passe doivent être identiques');\n      $('#erreur').modal();\n    } else {\n      $.post(\"/users/modifyPassword\", {\n        'password': password,\n        'passwordConf': passwordConf\n      }, function () {\n        window.location.assign('/');\n      });\n    }\n  });\n\n  /*\n  **************************\n        PUBLIC\n   **************************\n   */\n\n  self.createLogin = function (prenom, nom) {\n    var tab1 = \"ÀÁÂÃÄÅàáâãäåÒÓÔÕÖØòóôõöøÈÉÊËèéêëÇçÌÍÎÏìíîïÙÚÛÜùúûüÿÑñ\";\n    var tab2 = \"aaaaaaaaaaaaooooooooooooeeeeeeeecciiiiiiiiuuuuuuuuynn\";\n    var rep2 = tab1.split('');\n    var rep = tab2.split('');\n    var myarray = new Array();\n    var i = -1;\n    while (rep2[++i]) {\n      myarray[rep2[i]] = rep[i];\n    }\n    myarray['Œ'] = 'OE';\n    myarray['œ'] = 'oe';\n    myarray[' '] = '-';\n    var p = prenom.replace(/./g, function ($0) {\n      return myarray[$0] ? myarray[$0] : $0;\n    });\n    var n = nom.replace(/./g, function ($0) {\n      return myarray[$0] ? myarray[$0] : $0;\n    });\n    return p + '.' + n;\n  };\n\n  self.init = function () {};\n\n  return self;\n}();\n\nmodule.exports = loginPassword;\n\n//# sourceURL=webpack:///./src/loginPassword.js?");

/***/ }),

/***/ "./src/misc/dataListe.js":
/*!*******************************!*\
  !*** ./src/misc/dataListe.js ***!
  \*******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar dataListe = function () {\n  var self = {};\n\n  /*\n  **************************\n        PRIVATE\n   **************************\n   */\n  function setHTML(id, html) {\n    $('#' + id + 'liste').empty();\n    $('#' + id + 'liste').append(html);\n  }\n  /*\n  **************************\n        PUBLIC\n   **************************\n   */\n\n  self.set = function (element) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n      'form': false,\n      'display': true\n    };\n\n    //initialiser le champ input lié à datalist\n    var id = element.id;\n    var idListe = id + \"liste\";\n    var idSelect = id + \"Select\";\n    var idhidden = id + \"answer-hidden\";\n    var type = $(element).data(\"type\");\n    var placeholder = $(element).data(\"placeholder\");\n    var html = '';\n    var idForm = '';\n    if (options.display === false) {\n      $(element).css(\"display\", \"none\");\n    } else {\n      $(element).css(\"display\", \"block\");\n    }\n    if (options.form === true) {\n      idForm = id + \"Form\";\n      html = \"<form id=\" + idForm + \"></form>\";\n      $(element).empty();\n      $(element).append(html);\n      element = element.childNodes[0];\n    }\n\n    html = \"<div class='form-group'>\\\n       <input type='text' list=\" + idListe + \" id=\" + idSelect + \"  autocomplete='off' required value='' class='form-control' placeholder='\" + placeholder + \"' name='\" + type + \"'><input type='hidden' required value='' name='answer' id=\" + idhidden + \" /> \\\n       <datalist id=\" + idListe + \" ></datalist></div>\";\n\n    $(element).empty();\n    $(element).append(html);\n    if (options.form === true) {\n      $('#' + idSelect).wrap(\"<div class='input-group'></div>\");\n      $('#' + idSelect).after('<a href=\"#\" class=\"input-group-append\"><button class=\"btn btn-primary\" type=\"submit\">Valider</button></a>');\n    };\n  };\n\n  self.readOnly = function (element, value) {\n    //permet de passer le inputSelect à readonly ou non\n    var id = element.id;\n    var idSelect = id + \"Select\";\n    $(\"#\" + idSelect).prop(\"readonly\", value);\n  };\n\n  self.display = function (element, value) {\n    //permet de rendre visible ou non la dataliste value boolean\n    if (value === false) {\n      $(element).css(\"display\", \"none\");\n    } else {\n      $(element).css(\"display\", \"block\");\n    }\n  };\n\n  /*\n  **************************\n        les différentes dataListe en fonction de l'attribut data\n   **************************\n   */\n\n  self.setDataListe = function (element, data) {\n    var id = element.id;\n    var type = $(element).data(\"type\");\n    var html = '';\n    if (data.length === 0) {\n      // $(\"#error\").html(\"<p>Vous n'avez pas encore de matières dans la base</p><p>Créer une nouvlle matière</p>\");\n      // $('#erreur').modal(\"show\");\n\n    } else {\n      if (type === 'matiere') {\n        for (var i = 0; i < data.length; i++) {\n          html += \"<option data-value='\" + data[i]._id + \"'>\" + data[i].nom + \"</option>\";\n        }\n      } else if (type === 'eleve') {\n        for (var _i = 0; _i < data.length; _i++) {\n          html += \"<option data-value='\" + data[_i]._id + \"'>\" + data[_i].nom + ' ' + data[_i].prenom + \"</option>\";\n        }\n      } else if (type === 'professeur') {\n        for (var _i2 = 0; _i2 < data.length; _i2++) {\n          html += \"<option data-value='\" + data[_i2]._id + \"'>\" + data[_i2].nom + ' ' + data[_i2].prenom + \"</option>\";\n        }\n      } else if (type === 'classe') {\n        for (var _i3 = 0; _i3 < data.length; _i3++) {\n          html += \"<option data-value='\" + data[_i3]._id + \"'>\" + data[_i3].nom + \"</option>\";\n        }\n      } else if (type === 'classematiere') {\n        for (var _i4 = 0; _i4 < data.length; _i4++) {\n          html += \"<option data-value='\" + data[_i4].idClasseMatiere + \"'>\" + data[_i4].matiere.nom + '--' + data[_i4].professeur.nom + ' ' + data[_i4].professeur.prenom + \"</option>\";\n        }\n      } else if (type === 'classematierecoordo') {\n        for (var _i5 = 0; _i5 < data.length; _i5++) {\n          html += \"<option data-value='\" + data[_i5].idClasseMatiere + \"'>\" + data[_i5].classe + '-' + data[_i5].matiere + \"</option>\";\n        }\n      } else if (type === 'classematierecolleur') {\n        for (var _i6 = 0; _i6 < data.length; _i6++) {\n          html += \"<option data-value='\" + data[_i6].idClasseMatiere + \"'>\" + data[_i6].classe + '-' + data[_i6].matiere + \"</option>\";\n        }\n      } else if (type === 'periodes') {\n        for (var _i7 = 0; _i7 < data.length; _i7++) {\n          html += \"<option data-value='\" + data[_i7]._id + \"'>\" + data[_i7].description + \" du : \" + moment(data[_i7].debutPeriode).format('L') + \" au : \" + moment(data[_i7].finPeriode).format('L') + \"</option>\";\n        }\n      } else if (type === 'etablissement') {\n        for (var _i8 = 0; _i8 < data.length; _i8++) {\n          html += \"<option data-value='\" + data[_i8].prefix + \"'>\" + data[_i8].nom + \"</option>\";\n        }\n      }\n    }\n    setHTML(id, html);\n  };\n\n  self.selectId = function (idElement) {\n    var id = idElement.id;\n    var inputId = id + 'Select';\n    var inputHiddenId = id + 'answer-hidden';\n    var message = $(idElement).data(\"message\");\n    document.querySelector('#' + inputId).addEventListener('input', function (e) {\n      var input = e.target,\n          list = input.getAttribute('list'),\n          options = document.querySelectorAll('#' + list + ' option'),\n          hiddenInput = document.getElementById(inputHiddenId),\n          label = input.value;\n      hiddenInput.value = label;\n\n      input.setCustomValidity(message);\n      for (var i = 0; i < options.length; i++) {\n        var option = options[i];\n\n        if (option.innerText === label) {\n          hiddenInput.value = option.getAttribute('data-value');\n          input.setCustomValidity('');\n          break;\n        }\n      }\n    });\n  };\n\n  self.getId = function (idElement) {\n    var id = idElement.id;\n    var inputHiddenId = id + 'answer-hidden';\n    return document.getElementById(inputHiddenId).value;\n  };\n\n  self.getName = function (idElement) {\n    var id = idElement.id;\n    var inputId = id + 'Select';\n    return document.getElementById(inputId).value;\n  };\n\n  self.setName = function (element, value) {\n    var id = element.id;\n    var inputId = id + \"Select\";\n    $(\"#\" + inputId).val(value);\n  };\n\n  /*\n  dtaliste spéciale pour gérer la notation de 0 à 20\n   */\n\n  self.selectNotes = function (idElement) {\n    var id = idElement.id;\n    var inputId = id + 'Select';\n    var message = \"note invalide\";\n    document.querySelector('#' + inputId).addEventListener('input', function (e) {\n      var input = e.target,\n          list = input.getAttribute('list'),\n          options = document.querySelectorAll('#' + list + ' option'),\n          label = input.value;\n\n      input.setCustomValidity(message);\n      for (var i = 0; i < options.length; i++) {\n        var option = options[i];\n\n        if (option.value == label) {\n          input.setCustomValidity('');\n          break;\n        }\n      }\n    });\n  };\n\n  self.setNotes = function (element) {\n    //créé une dataliste pour les notes de 0 à 20 + n.n. (non noté et abs)\n    var id = element.id;\n    var idListe = id + \"liste\";\n    var idSelect = id + \"Select\";\n    var type = $(element).data(\"type\");\n    var html = '';\n\n    html = \"<div class='form-group'><label>Note :</label><input type='text' list=\" + idListe + \" id=\" + idSelect + \"  autocomplete='off' required value='' class='form-control' name='\" + type + \"'><datalist id=\" + idListe + \" ></datalist></div>\";\n    $(element).empty();\n    $(element).append(html);\n    html = '';\n    html += \"<option value='n.n'></option>\";\n    html += \"<option value='abs.'></option>\";\n    for (var i = 0; i < 21; i++) {\n      html += \"<option value='\" + i + \"'></option>\";\n    }\n    setHTML(id, html); //on insère la datalistelet id = idElement.id;\n    var inputId = id + 'Select';\n    return document.getElementById(inputId).value;\n  };\n\n  self.getNote = function (element) {\n    var id = element.id;\n    var inputId = id + 'Select';\n    return document.getElementById(inputId).value;\n  };\n\n  self.setLaNote = function (element, value) {\n    var id = element.id;\n    var inputId = id + \"Select\";\n    $(\"#\" + inputId).val(value);\n  };\n\n  return self;\n}();\n\nmodule.exports = dataListe;\n\n//# sourceURL=webpack:///./src/misc/dataListe.js?");

/***/ }),

/***/ "./src/professeur.js":
/*!***************************!*\
  !*** ./src/professeur.js ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar professeur = function () {\n\n  var self = {};\n  var idProfesseur = document.body.getAttribute(\"data-idprofesseur\");\n  var profilProfesseur = document.body.getAttribute(\"data-profil\");\n  var dataListe = __webpack_require__(/*! ./misc/dataListe.js */ \"./src/misc/dataListe.js\");\n  /*\n  **************************\n        PRIVATE\n   **************************\n   */\n\n  function menu() {\n\n    $('#navColles').on('click', function () {\n      $(\".visible\").css(\"display\", \"none\");\n      $(\"#showColles\").css(\"display\", \"block\");\n    });\n\n    $('#navParam').on('click', function () {\n      $(\".visible\").css(\"display\", \"none\");\n      $(\"#showParam\").css(\"display\", \"block\");\n    });\n\n    $('#navCompte').on('click', function () {\n      $(\".visible\").css(\"display\", \"none\");\n      $(\"#modifyPassword\").css(\"display\", \"block\");\n    });\n\n    $('#navHelp').on('click', function () {\n      $(\".visible\").css(\"display\", \"none\");\n      $(\"#showHelp\").css(\"display\", \"block\");\n    });\n  }\n\n  /*\n  ********************************************************************\n    Obtention de la liste de mes classes en tant que coordo\n  ************************************************************\n    */\n  function getListeClassesCoordo() {\n    $.post(\"/professeur/tableClassesCoordoJSON/\", {\n      'idProfesseur': idProfesseur\n    }, function (data) {\n      var el5 = document.getElementById('dataListe5');\n      dataListe.setDataListe(el5, data);\n      var el7 = document.getElementById('dataListe7');\n      dataListe.setDataListe(el7, data);\n      var el8 = document.getElementById('dataListe8');\n      dataListe.setDataListe(el8, data);\n    });\n  }\n\n  /*\n  **************************\n        PUBLIC\n   **************************\n   */\n\n  self.init = function () {\n    $('.summernote').summernote({\n      height: 100,\n      dialogsInBody: true,\n      toolbar: [['style', ['bold', 'italic', 'underline', 'strike']], ['para', ['ul', 'ol']], ['color', ['color']], ['para', ['ul', 'ol', 'paragraph']], ['insert', ['link', 'hr']], ['misc', ['undo', 'redo', 'print', 'help', 'fullscreen']]],\n      styleWithSpan: false\n    });\n\n    // addEventListener pour les boutons déclenchant les modals\n    //\n    document.getElementById(\"buttonAddClasse\").addEventListener('click', function () {\n      document.getElementById('addClasseForm').reset();\n      var el4 = document.querySelector('#dataListe4'); //liste des matières   partialsParamColles/formAddColleClasse\n      dataListe.display(el4, false);\n      $('#addClasseProfesseur').modal();\n    });\n\n    document.getElementById(\"buttonAddColle\").addEventListener('click', function () {\n      document.getElementById('addColleForm').setAttribute(\"data-mode\", \"ajouter\");\n      document.getElementById('addColleForm').setAttribute(\"data-idcolle\", '');\n      var el2 = document.getElementById('dataListe2');\n      dataListe.readOnly(el2, false);\n      document.getElementById('addColleForm').reset();\n      $(document.getElementById('obsEleve')).summernote('code', '');\n      $(document.getElementById('obsCoordo')).summernote('code', '');\n      document.getElementById('dateSaisie').innerHTML = moment().format('L');\n      $('#addColleModal').modal();\n    });\n\n    if (profilProfesseur === 'coordonnateur') {\n      // permet au coordo de déclencher l'ajout d'un colleur\n      document.getElementById(\"buttonAddColleur\").addEventListener('click', function () {\n        document.getElementById('addColleurForm').reset();\n        $('#addColleurClasse').modal();\n      });\n\n      // permet de déclencher l'ajout d'un programme\n      document.getElementById(\"buttonAddProgramme\").addEventListener('click', function () {\n        document.getElementById('addProgrammeForm').setAttribute(\"data-mode\", \"ajouter\");\n        document.getElementById('addProgrammeForm').setAttribute(\"data-idprogramme\", '');\n        document.getElementById('addProgrammeForm').reset();\n        $(document.getElementById('detailProg')).summernote('code', '');\n        $('#addProgrammeModal').modal();\n      });\n    }\n\n    //on initialise les dataListes\n    var el1 = document.querySelector('#dataListe1'); //liste des colles/classe  du professeur : addColles\n    dataListe.set(el1, {\n      'form': true\n    });\n\n    var el2 = document.querySelector('#dataListe2'); //liste des élèves formAddColle\n    dataListe.set(el2);\n\n    var el3 = document.querySelector('#dataListe3'); //liste des classes partialsParamColles/formAddColleClasse\n    dataListe.set(el3, {\n      'form': true\n    });\n    var el4 = document.querySelector('#dataListe4'); //liste des matières   partialsParamColles/formAddColleClasse\n    dataListe.set(el4, {\n      'display': false\n    });\n\n    if (profilProfesseur === 'coordonnateur') {\n      var el5 = document.querySelector('#dataListe5'); //liste des classes matières du coordonateur de discipline\n      dataListe.set(el5, {\n        'form': true\n      });\n    }\n\n    var el6 = document.querySelector('#dataListe6'); //liste des notes\n    dataListe.setNotes(el6);\n\n    if (profilProfesseur === 'coordonnateur') {\n      var el7 = document.querySelector('#dataListe7'); //liste des classes matières du coordonateur de discipline\n      dataListe.set(el7, {\n        'form': true\n      });\n\n      var el8 = document.querySelector('#dataListe8'); //liste des classes matières du coordonateur de discipline\n      dataListe.set(el8, {\n        'form': true\n      });\n    }\n    //liste des Periodes\n    var el9 = document.querySelector('#dataListe9');\n    dataListe.set(el9, {\n      'form': true\n    });\n\n    // dataliste pour ajouter des colleurs à un coordo\n    if (profilProfesseur === 'coordonnateur') {\n      var el10 = document.querySelector('#dataListe10'); //liste des professeurs\n      dataListe.set(el10);\n      var el11 = document.querySelector('#dataListe11'); //liste des matières  du coordo de discipline\n      dataListe.set(el11);\n    }\n\n    $('input').clearer(); //permet de réinitialiser les input\n\n\n    //parametrage colleur - professeur\n    var paramCollesClasses = __webpack_require__(/*! ./professeur/paramCollesClasses.js */ \"./src/professeur/paramCollesClasses.js\");\n    paramCollesClasses.init();\n\n    //gestion des colles\n    var colles = __webpack_require__(/*! ./professeur/colles.js */ \"./src/professeur/colles.js\");\n    colles.init();\n\n    var programme = __webpack_require__(/*! ./professeur/programme.js */ \"./src/professeur/programme.js\");\n    programme.init();\n\n    var decompteHeures = __webpack_require__(/*! ./professeur/decompteHeures.js */ \"./src/professeur/decompteHeures.js\");\n    decompteHeures.init();\n\n    if (profilProfesseur === 'coordonnateur') {\n      //remplir la dataliste du coordo\n      getListeClassesCoordo();\n      //parametrage mesClasse\n      var paramMesClasses = __webpack_require__(/*! ./professeur/paramMesClasses.js */ \"./src/professeur/paramMesClasses.js\");\n      // parametrage classes coordo\n      paramMesClasses.init();\n      //colles synthese coordo\n      var synthese = __webpack_require__(/*! ./professeur/synthese.js */ \"./src/professeur/synthese.js\");\n      synthese.init();\n      //colles resultats coordo\n      var resultats = __webpack_require__(/*! ./professeur/resultats.js */ \"./src/professeur/resultats.js\");\n      resultats.init();\n\n      var addProgramme = __webpack_require__(/*! ./professeur/addProgramme.js */ \"./src/professeur/addProgramme.js\");\n      addProgramme.init();\n    }\n\n    menu();\n    //picker pour addColle\n    $('#datetimepicker1').datetimepicker({\n      format: 'L'\n    });\n  };\n\n  return self;\n}();\n\nmodule.exports = professeur;\n\n//# sourceURL=webpack:///./src/professeur.js?");

/***/ }),

/***/ "./src/professeur/addProgramme.js":
/*!****************************************!*\
  !*** ./src/professeur/addProgramme.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar addProgramme = function () {\n\n  var self = {};\n  var idProfesseur = document.body.getAttribute(\"data-idprofesseur\");\n  var dataListe = __webpack_require__(/*! ../misc/dataListe.js */ \"./src/misc/dataListe.js\");\n\n  var el8 = document.getElementById('dataListe8'); //liste des classes matieres\n  dataListe.selectId(el8);\n\n  /*\n  ********************************************************************\n        PRIVE\n  ************************************************************\n  /*\n    Choix d 'une période '\n  */\n\n  $('#datetimepickerProg1').datetimepicker({\n    format: 'L'\n  });\n  $('#datetimepickerProg2').datetimepicker({\n    format: 'L',\n    useCurrent: false\n  });\n\n  $(\"#datetimepickerProg1\").on(\"change.datetimepicker\", function (e) {\n    $('#datetimepickerProg2').datetimepicker('minDate', e.date);\n  });\n  $(\"#datetimepickerProg2\").on(\"change.datetimepicker\", function (e) {\n    $('#datetimepickerProg1').datetimepicker('maxDate', e.date);\n  });\n\n  /*\n  ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** **\n  Validation du formulaire pour ajouterModifier  un programme de colle **\n  ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** **\n  */\n\n  $('#addProgrammeForm').submit(function (e) {\n    e.preventDefault();\n    var el8 = document.getElementById('dataListe8');\n    var idClasseMatiere = dataListe.getId(el8);\n    var debut = moment($('#datetimepickerProg1').find(\"input\").val(), 'DD/MM/YYYY').format();\n    var fin = moment($('#datetimepickerProg2').find(\"input\").val(), 'DD/MM/YYYY').format();\n    var titre = document.getElementById('titre').value;\n    var detail = $(document.getElementById('detailProg')).summernote('code');\n    var mode = document.getElementById('addProgrammeForm').getAttribute(\"data-mode\");\n    var idProgramme = '';\n    if (mode === 'modifier') {\n      idProgramme = document.getElementById('addProgrammeForm').getAttribute(\"data-idprogramme\");\n    }\n    $.post(\"/professeur/addOrModProgramme/\", {\n      \"idClasseMatiere\": idClasseMatiere,\n      \"debut\": debut,\n      \"fin\": fin,\n      \"titre\": titre,\n      \"detail\": detail,\n      \"mode\": mode, // mode : ajout ou modification d'une entree'\n      \"idProgramme\": idProgramme //utile en cas de modif\n    }, function () {\n      $('#addProgrammeModal').modal('hide');\n      refreshTableProgrammeCoordo(idClasseMatiere);\n    });\n  });\n\n  /*\n  ********************************************************************\n    Suppression d'un programme de colle\n  ************************************************************\n    */\n  function suppProgramme(idClasseMatiere, idProgramme) {\n    $.post(\"/professeur/suppProgramme/\", {\n      \"idProgramme\": idProgramme,\n      \"idClasseMatiere\": idClasseMatiere\n    }, function () {\n      refreshTableProgrammeCoordo(idClasseMatiere);\n    });\n  }\n\n  /*\n  ********************************************************************\n        Choix de la matiere / classe du coordo\n  ************************************************************\n  */\n\n  $('#dataListe8Form').submit(function (e) {\n    e.preventDefault();\n    var el8 = document.getElementById('dataListe8'); //liste des matieresClasse du coordo\n    var classeMatiere = dataListe.getName(el8);\n    var idClasseMatiere = dataListe.getId(el8);\n    if (idClasseMatiere != '') {\n      $('#tabProgrammeCoordo').css(\"display\", \"block\");\n      refreshTableProgrammeCoordo(idClasseMatiere);\n    } else {\n      $('#tabProgrammeCoordo').css(\"display\", \"none\");\n    }\n  });\n\n  /*\n  ********************************************************************\n    Mise à jour de la table des colles\n  ************************************************************\n    */\n  function refreshTableProgrammeCoordo(idClasseMatiere) {\n    $.post(\"/professeur/tableProgrammeCoordoJSON/\", {\n      'idClasseMatiere': idClasseMatiere\n    }, function (data) {\n      var table = $('#tableProgrammeCoordo').DataTable({\n        retrieve: true\n      });\n      table.clear().draw();\n      table.rows.add(data); // Add new data\n      table.columns.adjust().draw(); // Redraw the DataTable\n    });\n  }\n\n  function detailProgramme(d) {\n    // `d` is the original data object for the row\n    return '<table cellpadding=\"5\" cellspacing=\"0\" border=\"0\" style=\"padding-left:50px;\">' + '<tr>' + '<td>Détail:</td>' + '<td>' + d.detail + '</td>' + '</tr>' + '</table>';\n  };\n\n  function initDataTablesProgrammeCoordo() {\n    var liste = [];\n    $.fn.dataTable.moment('DD/MM/YYYY');\n    var table = $('#tableProgrammeCoordo').DataTable({\n      data: liste,\n      // dom : '<\"top\"Bif>rt<\"bottom\"lp><\"clear\">',\n      language: {\n        processing: \"Traitement en cours...\",\n        search: \"Rechercher&nbsp;:\",\n        lengthMenu: \"Afficher _MENU_ &eacute;l&eacute;ments\",\n        info: \"Affichage de l'&eacute;lement _START_ &agrave; _END_ sur _TOTAL_ &eacute;l&eacute;ments\",\n        infoEmpty: \"Affichage de l'&eacute;lement 0 &agrave; 0 sur 0 &eacute;l&eacute;ments\",\n        infoFiltered: \"(filtr&eacute; de _MAX_ &eacute;l&eacute;ments au total)\",\n        infoPostFix: \"\",\n        loadingRecords: \"Chargement en cours...\",\n        zeroRecords: \"Aucun &eacute;l&eacute;ment &agrave; afficher\",\n        emptyTable: \"Aucune donnée disponible dans le tableau\",\n        paginate: {\n          first: \"Premier\",\n          previous: \"Pr&eacute;c&eacute;dent\",\n          next: \"Suivant\",\n          last: \"Dernier\"\n        },\n        aria: {\n          sortAscending: \": activer pour trier la colonne par ordre croissant\",\n          sortDescending: \": activer pour trier la colonne par ordre décroissant\"\n        }\n      },\n\n      columns: [{\n        data: null,\n        render: function render(data, type, row) {\n          return moment(data.debut).format(\"DD/MM/YYYY\");\n        }\n      }, {\n        data: null,\n        render: function render(data, type, row) {\n          return moment(data.fin).format(\"DD/MM/YYYY\");\n        }\n      }, {\n        data: \"titre\"\n      }, {\n        \"className\": 'details-control',\n        \"orderable\": false,\n        \"data\": null,\n        \"defaultContent\": ''\n      }, {\n        data: null,\n        className: \"center\",\n        defaultContent: '<a href=\"\" class=\"editor_modif\">Edit</a>/<a href=\"\" class=\"editor_supp\">Supp</a>'\n      }]\n    });\n\n    $('#tableProgrammeCoordo tbody').on('click', 'td.details-control', function () {\n      var tr = $(this).closest('tr');\n      var row = table.row(tr);\n      if (row.child.isShown()) {\n        // This row is already open - close it\n        row.child.hide();\n        tr.removeClass('shown');\n      } else {\n        // Open this row\n        row.child(detailProgramme(row.data())).show();\n        tr.addClass('shown');\n      }\n    });\n\n    // Edit record\n    $('#tableProgrammeCoordo').on('click', 'a.editor_modif', function (e) {\n      e.preventDefault();\n      var tr = $(this).closest('tr');\n      var row = table.row(tr);\n      var element = row.data();\n      var debut = element.debut;\n      var fin = element.fin;\n      var titre = element.titre;\n      var detail = element.detail;\n      var idProgramme = element.idProgramme;\n      // utiliser un data-action='modifier' ou data-action='supprimer'\n      document.getElementById('addProgrammeForm').setAttribute(\"data-mode\", \"modifier\");\n      document.getElementById('addProgrammeForm').setAttribute(\"data-idprogramme\", idProgramme);\n      $(document.getElementById('debutProg')).val(moment(element.debut).format('DD/MM/YYYY'));\n      $(document.getElementById('finProg')).val(moment(element.fin).format('DD/MM/YYYY'));\n      $(document.getElementById('titre')).val(titre);\n      $(document.getElementById('detailProg')).summernote('code', detail);\n      $('#addProgrammeModal').modal();\n    });\n\n    // Supp record\n    $('#tableProgrammeCoordo').on('click', 'a.editor_supp', function (e) {\n      e.preventDefault();\n      var tr = $(this).closest('tr');\n      var row = table.row(tr);\n      var element = row.data();\n      suppProgramme(element.idClasseMatiere, element.idProgramme);\n    });\n  };\n\n  /*\n  ********************************************************************\n    Mise à jour de la table des colles\n  ************************************************************\n  */\n  function refreshTableProgrammeColleur() {\n    $.post(\"/professeur/tableProgrammeColleurJSON/\", {\n      'idProfesseur': idProfesseur\n    }, function (data) {\n      $('#tableProgrammeColleur').DataTable().clear().draw();\n      $('#tableProgrammeColleur').DataTable().rows.add(data); // Add new data\n      $('#tableProgrammeColleur').DataTable().columns.adjust().draw(); // Redraw the DataTable\n    });\n  }\n\n  function detailProgrammeColleur(d) {\n    // `d` is the original data object for the row\n    return '<table cellpadding=\"5\" cellspacing=\"0\" border=\"0\" style=\"padding-left:50px;\">' + '<tr>' + '<td>Détail:</td>' + '<td>' + d.detail + '</td>' + '</tr>' + '</table>';\n  };\n\n  function initDataTablesProgrammeColleur() {\n    var liste = [];\n    $.fn.dataTable.moment('DD/MM/YYYY');\n    var table = $('#tableProgrammeColleur').DataTable({\n      retrieve: true,\n      data: liste,\n      // dom : '<\"top\"Bif>rt<\"bottom\"lp><\"clear\">',\n      language: {\n        processing: \"Traitement en cours...\",\n        search: \"Rechercher&nbsp;:\",\n        lengthMenu: \"Afficher _MENU_ &eacute;l&eacute;ments\",\n        info: \"Affichage de l'&eacute;lement _START_ &agrave; _END_ sur _TOTAL_ &eacute;l&eacute;ments\",\n        infoEmpty: \"Affichage de l'&eacute;lement 0 &agrave; 0 sur 0 &eacute;l&eacute;ments\",\n        infoFiltered: \"(filtr&eacute; de _MAX_ &eacute;l&eacute;ments au total)\",\n        infoPostFix: \"\",\n        loadingRecords: \"Chargement en cours...\",\n        zeroRecords: \"Aucun &eacute;l&eacute;ment &agrave; afficher\",\n        emptyTable: \"Aucune donnée disponible dans le tableau\",\n        paginate: {\n          first: \"Premier\",\n          previous: \"Pr&eacute;c&eacute;dent\",\n          next: \"Suivant\",\n          last: \"Dernier\"\n        },\n        aria: {\n          sortAscending: \": activer pour trier la colonne par ordre croissant\",\n          sortDescending: \": activer pour trier la colonne par ordre décroissant\"\n        }\n      },\n\n      columns: [{\n        data: 'classe'\n      }, {\n        data: null,\n        render: function render(data, type, row) {\n          // Combine the first and last names into a single table field\n          return data.nom + ' ' + data.prenom;\n        }\n      }, {\n        data: null,\n        render: function render(data, type, row) {\n          return moment(data.debut).format(\"DD/MM/YYYY\");\n        }\n      }, {\n        data: null,\n        render: function render(data, type, row) {\n          return moment(data.fin).format(\"DD/MM/YYYY\");\n        }\n      }, {\n        data: \"titre\"\n      }, {\n        \"className\": 'details-control',\n        \"orderable\": false,\n        \"data\": null,\n        \"defaultContent\": ''\n      }]\n    });\n\n    $('#tableProgrammeColleur tbody').on('click', 'td.details-control', function () {\n      var tr = $(this).closest('tr');\n      var row = table.row(tr);\n      if (row.child.isShown()) {\n        // This row is already open - close it\n        row.child.hide();\n        tr.removeClass('shown');\n      } else {\n        // Open this row\n        row.child(detailProgrammeColleur(row.data())).show();\n        tr.addClass('shown');\n      }\n    });\n  };\n\n  /*\n  ********************************************************************\n        PUBLIC\n  ************************************************************\n  */\n\n  self.init = function () {\n    initDataTablesProgrammeCoordo();\n  };\n\n  return self;\n}();\n\nmodule.exports = addProgramme;\n\n//# sourceURL=webpack:///./src/professeur/addProgramme.js?");

/***/ }),

/***/ "./src/professeur/colles.js":
/*!**********************************!*\
  !*** ./src/professeur/colles.js ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar colles = function () {\n\n  var self = {};\n  var idProfesseur = document.body.getAttribute(\"data-idprofesseur\");\n  var dataListe = __webpack_require__(/*! ../misc/dataListe.js */ \"./src/misc/dataListe.js\");\n\n  /*\n  ********************************************************************\n        PRIVE\n  ************************************************************\n  ********************************************************************\n      validation des datalistes\n  ************************************************************\n    */\n\n  var el1 = document.getElementById('dataListe1'); //validation de la liste des collesClasse du professeur\n  dataListe.selectId(el1);\n  var el2 = document.getElementById('dataListe2'); //validation de la  liste des élèves\n  dataListe.selectId(el2);\n  var el6 = document.getElementById('dataListe6'); //liste des notes\n  dataListe.selectNotes(el6);\n\n  /*\n  ********************************************************************\n        Choix d'une matiere pour le colleur et récupération de la liste des élèves\n  ************************************************************\n  */\n\n  $('#dataListe1Form').submit(function (e) {\n    e.preventDefault();\n    var el1 = document.getElementById('dataListe1'); //liste des collesClasse du professeur\n    var colle = dataListe.getName(el1);\n    var idColle = dataListe.getId(el1);\n    if (idColle != '' && typeof idColle !== 'undefined') {\n      $.post(\"/professeur/listeElevesJSON/\", {\n        'idColle': idColle,\n        'idProfesseur': idProfesseur\n      }, function (data) {\n        var el2 = document.getElementById('dataListe2');\n        dataListe.setDataListe(el2, data);\n        if (colle != '') {\n          $('#tabGestionColles').css(\"display\", \"block\");\n          refreshTableColle(idColle);\n        } else {\n          $('#tabGestionColles').css(\"display\", \"none\");\n        }\n      });\n    }\n  });\n\n  /*\n  ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** **\n  Validation du formulaire pour ajouterModifier  une colle **\n  ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** **\n  */\n\n  $('#addColleForm').submit(function (e) {\n    e.preventDefault();\n    var el1 = document.getElementById('dataListe1');\n    var idMatiereColle = dataListe.getId(el1);\n    var el2 = document.getElementById('dataListe2');\n    var idEleve = dataListe.getId(el2);\n    var date = moment(document.getElementById('dateColle').value, 'DD/MM/YYYY').startOf('day');\n    var dateSaisie = moment(document.getElementById('dateSaisie').innerHTML, 'DD/MM/YYYY').startOf('day');\n    var el6 = document.getElementById('dataListe6');\n    var note = dataListe.getNote(el6);\n    var noNote = '';\n    if (isNaN(parseInt(note))) {\n      noNote = note;\n      note = null;\n    } else {\n      note = parseInt(note);\n    }\n    var sujet = document.getElementById('sujet').value;\n    var obsCoordo = $('#obsCoordo').summernote('code');\n    var obsEleve = $('#obsEleve').summernote('code');\n    var mode = document.getElementById('addColleForm').getAttribute(\"data-mode\");\n    var idColle = '';\n    if (mode === 'modifier') {\n      idColle = document.getElementById('addColleForm').getAttribute(\"data-idcolle\");\n    }\n    $.post(\"/professeur/addOrModColle/\", {\n      \"date\": moment(date).format(),\n      \"dateSaisie\": moment(dateSaisie).format(),\n      \"idEleve\": idEleve,\n      \"idMatiereColle\": idMatiereColle,\n      \"idProfesseur\": idProfesseur,\n      \"note\": note,\n      \"noNote\": noNote,\n      \"sujet\": sujet,\n      \"obsCoordo\": obsCoordo,\n      \"obsEleve\": obsEleve,\n      \"mode\": mode, // mode : ajout ou modification d'une colle\n      \"idColle\": idColle //utile en cas de modif\n    }, function () {\n      var el1 = document.getElementById('dataListe1');\n      var idColle = dataListe.getId(el1);\n      $('#addColleModal').modal('hide');\n      //on rafraichit la table\n      refreshTableColle(idMatiereColle);\n    });\n  });\n\n  /*\n  ********************************************************************\n    Mise à jour de la table des colles\n  ************************************************************\n    */\n  function refreshTableColle(idMatiereColle) {\n    $.post(\"/professeur/tableCollesJSON/\", {\n      'idMatiereColle': idMatiereColle,\n      'idProfesseur': idProfesseur\n    }, function (data) {\n      $('#tableColles').DataTable().clear().draw();\n      $('#tableColles').DataTable().rows.add(data); // Add new data\n      $('#tableColles').DataTable().columns.adjust().draw(); // Redraw the DataTable\n    });\n  }\n\n  /*\n  ********************************************************************\n    Suppression d'une colle\n  ************************************************************\n    */\n  function suppColle(idMatiereColle, idColle) {\n    $.post(\"/professeur/suppColle/\", {\n      \"idColle\": idColle,\n      \"idProfesseur\": idProfesseur,\n      \"idMatiereColle\": idMatiereColle\n    }, function () {\n      refreshTableColle(idMatiereColle);\n    });\n  }\n\n  /*\n  ********************************************************************\n    Obtention de la liste des colles/matieres et mise à jour de la dataliste pour le professeur\n  ************************************************************\n    */\n  function getListeColles() {\n    $.post(\"/professeur/tableMesCollesClassesJSON/\", {\n      'idProfesseur': idProfesseur\n    }, function (data) {\n      var el1 = document.getElementById('dataListe1');\n      dataListe.setDataListe(el1, data);\n    });\n  }\n\n  /*\n  **************************\n      fonction permettant d'afficher la liste des colles pour une matière/classe donnée\n   **************************\n   */\n\n  function format(d) {\n    // `d` is the original data object for the row\n    return '<table cellpadding=\"5\" cellspacing=\"0\" border=\"0\" style=\"padding-left:50px;\">' + '<tr>' + '<td>obs. coordo:</td>' + '<td>' + d.obsCoordo + '</td>' + '</tr>' + '<tr>' + '<td>obs. élève:</td>' + '<td>' + d.obsEleve + '</td>' + '</tr>' + '</table>';\n  };\n\n  function initDataTables() {\n    var liste = [];\n    $.fn.dataTable.moment('DD/MM/YYYY');\n    var table = $('#tableColles').DataTable({\n      retrieve: true,\n      data: liste,\n      // dom : '<\"top\"Bif>rt<\"bottom\"lp><\"clear\">',\n      language: {\n        processing: \"Traitement en cours...\",\n        search: \"Rechercher&nbsp;:\",\n        lengthMenu: \"Afficher _MENU_ &eacute;l&eacute;ments\",\n        info: \"Affichage de l'&eacute;lement _START_ &agrave; _END_ sur _TOTAL_ &eacute;l&eacute;ments\",\n        infoEmpty: \"Affichage de l'&eacute;lement 0 &agrave; 0 sur 0 &eacute;l&eacute;ments\",\n        infoFiltered: \"(filtr&eacute; de _MAX_ &eacute;l&eacute;ments au total)\",\n        infoPostFix: \"\",\n        loadingRecords: \"Chargement en cours...\",\n        zeroRecords: \"Aucun &eacute;l&eacute;ment &agrave; afficher\",\n        emptyTable: \"Aucune donnée disponible dans le tableau\",\n        paginate: {\n          first: \"Premier\",\n          previous: \"Pr&eacute;c&eacute;dent\",\n          next: \"Suivant\",\n          last: \"Dernier\"\n        },\n        aria: {\n          sortAscending: \": activer pour trier la colonne par ordre croissant\",\n          sortDescending: \": activer pour trier la colonne par ordre décroissant\"\n        }\n      },\n      order: [],\n      columns: [{\n        data: null,\n        orderable: false,\n        render: function render(data, type, row) {\n          // Combine the first and last names into a single table field\n          return data.nom + ' ' + data.prenom;\n        }\n      }, {\n        data: null,\n        orderable: false,\n        render: function render(data, type, row) {\n          if (data.note === null) {\n            return data.noNote;\n          }\n          return data.note;\n        }\n      }, {\n        data: \"date\",\n        render: function render(data, type, row) {\n          return moment(data).format(\"DD/MM/YYYY\");\n        }\n      }, {\n        data: 'sujet',\n        orderable: false\n      }, {\n        data: \"dateSaisie\",\n        render: function render(data, type, row) {\n          return moment(data).format(\"DD/MM/YYYY\");\n        }\n      }, {\n        \"className\": 'details-control',\n        \"orderable\": false,\n        \"data\": null,\n        \"defaultContent\": ''\n      }, {\n        data: null,\n        className: \"center\",\n        defaultContent: '<a href=\"\" class=\"editor_modif\">Edit</a>/<a href=\"\" class=\"editor_supp\">Supp</a>'\n      }]\n    });\n\n    // Edit record\n    $('#tableColles').on('click', 'a.editor_modif', function (e) {\n      e.preventDefault();\n      var tr = $(this).closest('tr');\n      var row = table.row(tr);\n      var element = row.data();\n      var idColle = element.idColle;\n      var nom = element.nom + ' ' + element.prenom;\n      var note = element.note;\n      if (element.note === null) {\n        note = element.noNote;\n      }\n      var date = element.date;\n      var dateSaisie = element.dateSaisie;\n      var sujet = element.sujet;\n      var obsEleve = element.obsEleve;\n      var obsCoordo = element.obsCoordo;\n      // utiliser un data-action='modifier' ou data-action='supprimer'\n      document.getElementById('addColleForm').setAttribute(\"data-mode\", \"modifier\");\n      document.getElementById('addColleForm').setAttribute(\"data-idcolle\", idColle);\n      var el2 = document.getElementById('dataListe2');\n      dataListe.readOnly(el2, true);\n      dataListe.setName(el2, nom);\n      $(document.getElementById('dateColle')).val(moment(date).format('DD/MM/YYYY'));\n      document.getElementById('dateSaisie').innerHTML = moment().format('L');\n      $(document.getElementById('sujet')).val(sujet);\n      $(document.getElementById('obsEleve')).summernote('code', obsEleve);\n      $(document.getElementById('obsCoordo')).summernote('code', obsCoordo);\n      var el6 = document.getElementById('dataListe6');\n      dataListe.setLaNote(el6, note);\n\n      $('#addColleModal').modal();\n    });\n\n    // Supp record\n    $('#tableColles').on('click', 'a.editor_supp', function (e) {\n      e.preventDefault();\n      var tr = $(this).closest('tr');\n      var row = table.row(tr);\n      var element = row.data();\n      suppColle(element.idMatiereColle, element.idColle);\n    });\n\n    $('#tableColles tbody').on('click', 'td.details-control', function () {\n      var tr = $(this).closest('tr');\n      var row = table.row(tr);\n      if (row.child.isShown()) {\n        // This row is already open - close it\n        row.child.hide();\n        tr.removeClass('shown');\n      } else {\n        // Open this row\n        row.child(format(row.data())).show();\n        tr.addClass('shown');\n      }\n    });\n  };\n\n  /*\n  ********************************************************************\n        PUBLIC\n  ************************************************************\n  */\n\n  self.init = function () {\n    getListeColles();\n    initDataTables();\n  };\n\n  return self;\n}();\n\nmodule.exports = colles;\n\n//# sourceURL=webpack:///./src/professeur/colles.js?");

/***/ }),

/***/ "./src/professeur/decompteHeures.js":
/*!******************************************!*\
  !*** ./src/professeur/decompteHeures.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar decompteHeures = function () {\n\n  var self = {};\n  var idProfesseur = document.body.getAttribute(\"data-idprofesseur\");\n  var dataListe = __webpack_require__(/*! ../misc/dataListe.js */ \"./src/misc/dataListe.js\");\n\n  /*\n  ********************************************************************\n        PRIVE\n  ************************************************************\n  */\n\n  var el9 = document.getElementById('dataListe9');\n  dataListe.selectId(el9);\n\n  $('#dataListe9Form').submit(function (e) {\n    e.preventDefault();\n    var idPeriode = dataListe.getId(el9);\n    if (idPeriode != '') {\n      $('#showTableDecompte').css(\"display\", \"block\");\n      refreshTableDecompteHeures(idPeriode);\n    } else {\n      $('#showTableDecompte').css(\"display\", \"none\");\n    }\n  });\n\n  function lirePeriodes() {\n    $.get(\"/professeur/getAnnee/\", function (data) {\n      if (typeof data.annee === 'undefined' || typeof data.annee.debut === 'undefined' && typeof data.annee.fin === 'undefined') {\n        return;\n      } else {\n        var periodes = data.periodes;\n        var dateInitAddPeriode = void 0;\n        var n = 0;\n        if (typeof periodes !== 'undefined' && periodes.length !== 0) {\n          n = data.periodes.length;\n          dateInitAddPeriode = data.periodes[n - 1].finPeriode;\n        } else {\n          dateInitAddPeriode = data.annee.debut;\n        }\n        //on met à jour la dataliste des periodes\n        var _el = document.getElementById('dataListe9');\n        dataListe.setDataListe(_el, periodes);\n      }\n    });\n  };\n\n  function initDataDecompteHeures() {\n    var liste = [];\n    $.fn.dataTable.moment('DD/MM/YYYY');\n    var table = $('#tableDecompte').DataTable({\n      retrieve: true,\n      data: liste,\n      // dom : '<\"top\"Bif>rt<\"bottom\"lp><\"clear\">',\n      language: {\n        processing: \"Traitement en cours...\",\n        search: \"Rechercher&nbsp;:\",\n        lengthMenu: \"Afficher _MENU_ &eacute;l&eacute;ments\",\n        info: \"Affichage de l'&eacute;lement _START_ &agrave; _END_ sur _TOTAL_ &eacute;l&eacute;ments\",\n        infoEmpty: \"Affichage de l'&eacute;lement 0 &agrave; 0 sur 0 &eacute;l&eacute;ments\",\n        infoFiltered: \"(filtr&eacute; de _MAX_ &eacute;l&eacute;ments au total)\",\n        infoPostFix: \"\",\n        loadingRecords: \"Chargement en cours...\",\n        zeroRecords: \"Aucun &eacute;l&eacute;ment &agrave; afficher\",\n        emptyTable: \"Aucune donnée disponible dans le tableau\",\n        paginate: {\n          first: \"Premier\",\n          previous: \"Pr&eacute;c&eacute;dent\",\n          next: \"Suivant\",\n          last: \"Dernier\"\n        },\n        aria: {\n          sortAscending: \": activer pour trier la colonne par ordre croissant\",\n          sortDescending: \": activer pour trier la colonne par ordre décroissant\"\n        }\n      },\n\n      columns: [{\n        data: null,\n        render: function render(data, type, row) {\n          // Combine the first and last names into a single table field\n          return data.classe + '-' + data.matiere + ' ( ' + data.duree + ' mn )';\n        }\n      }, {\n        data: 'count'\n      }, {\n        data: null,\n        render: function render(data, type, row) {\n          // Combine the first and last names into a single table field\n          return Math.floor(data.heures / 60) + ' h ' + data.heures % 60 + ' mn';\n        }\n      }]\n    });\n  };\n\n  function refreshTableDecompteHeures(idPeriode) {\n    $.post(\"/professeur/tableDecompteHeuresJSON/\", { 'idProfesseur': idProfesseur, 'idPeriode': idPeriode }, function (data) {\n      $('#tableDecompte').DataTable().clear().draw();\n      $('#tableDecompte').DataTable().rows.add(data); // Add new data\n      $('#tableDecompte').DataTable().columns.adjust().draw(); // Redraw the DataTable\n    });\n  }\n\n  /*\n  ********************************************************************\n        PUBLIC\n  ************************************************************\n  */\n  /*\n  ********************************************************************\n    Mise à jour de la table des colles\n  ************************************************************\n    */\n\n  self.init = function () {\n    initDataDecompteHeures();\n    lirePeriodes();\n  };\n\n  return self;\n}();\n\nmodule.exports = decompteHeures;\n\n//# sourceURL=webpack:///./src/professeur/decompteHeures.js?");

/***/ }),

/***/ "./src/professeur/paramCollesClasses.js":
/*!**********************************************!*\
  !*** ./src/professeur/paramCollesClasses.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/*\n**************************\n      Script pour parametrer  les colles et classes du colleur\n **************************\n */\n\nvar paramCollesClasses = function () {\n  var self = {};\n  var idProfesseur = $('body').data(\"idprofesseur\");\n  var dataListe = __webpack_require__(/*! ../misc/dataListe.js */ \"./src/misc/dataListe.js\");\n  var classesMatieres;\n\n  /********************************************************************\n        Choix de l'élève et de la colle à partir d'une dataListe\n  ************************************************************\n      */\n  var el3 = document.getElementById('dataListe3'); //liste des classes\n  dataListe.selectId(el3);\n  var el4 = document.getElementById('dataListe4'); //liste des classesmatieres\n  dataListe.selectId(el4);\n\n  /*\n  ********************************************************************\n        PRIVE\n  ************************************************************\n   ********************************************************************\n        Choix de la classe pour ensuite choisir la matière dans modal form\n  ************************************************************\n        */\n  $('#dataListe3Form').submit(function (e) {\n    e.preventDefault();\n    var classe = dataListe.getName(el3);\n    var idClasse = dataListe.getId(el3);\n    var matiere = classesMatieres.find(function (el) {\n      if (el.idClasse === idClasse) {\n        var _el = document.getElementById('dataListe4');\n        dataListe.setDataListe(_el, el.matieres);\n        dataListe.display(_el, true);\n        return;\n      };\n    });\n  });\n\n  /*\n  ********************************************************************\n        Validation du formulaire pour creer une matiere pour le colleur\n  ************************************************************\n        */\n  $('#addClasseForm').submit(function (e) {\n    e.preventDefault();\n    var classe = dataListe.getName(el3);\n    var idClasse = dataListe.getId(el3);\n    var e4 = document.getElementById('dataListe4');\n    var idClasseMatiere = dataListe.getId(e4);\n    $.post(\"/professeur/addClasseMatiereColleur/\", {\n      'idClasse': idClasse,\n      'idProfesseur': idProfesseur,\n      'idClasseMatiere': idClasseMatiere\n    }, function (message) {\n      if (message.error !== \"ok\") {\n        $('#error').html(message.error);\n        $('#erreur').modal();\n      } else {\n        $('#addClasseProfesseur').modal('hide');\n        refreshTableMesCollesClasses();\n      }\n      dataListe.display(el4, false);\n      $('#addClasseForm')[0].reset();\n      $(\"#addClasseForm input[type=hidden]\").val('');\n      $('#dataListe3Form')[0].reset();\n      $(\"#dataListe3Form input[type=hidden]\").val('');\n    });\n  });\n\n  function getListeClassesMatieres() {\n    $.get(\"/professeur/listeClassesMatieresJSON/\", function (data) {\n      classesMatieres = data; //Attention varaible globale\n      var el3 = document.getElementById('dataListe3');\n      dataListe.setDataListe(el3, classesMatieres); //on peuple les classes\n    });\n  }\n\n  function initDataTablesMesCollesClasses() {\n    var liste = [];\n    var table = $('#tableMesCollesClasses').DataTable({\n      data: liste,\n      // dom : '<\"top\"Bif>rt<\"bottom\"lp><\"clear\">',\n      language: {\n        processing: \"Traitement en cours...\",\n        search: \"Rechercher&nbsp;:\",\n        lengthMenu: \"Afficher _MENU_ &eacute;l&eacute;ments\",\n        info: \"Affichage de l'&eacute;lement _START_ &agrave; _END_ sur _TOTAL_ &eacute;l&eacute;ments\",\n        infoEmpty: \"Affichage de l'&eacute;lement 0 &agrave; 0 sur 0 &eacute;l&eacute;ments\",\n        infoFiltered: \"(filtr&eacute; de _MAX_ &eacute;l&eacute;ments au total)\",\n        infoPostFix: \"\",\n        loadingRecords: \"Chargement en cours...\",\n        zeroRecords: \"Aucun &eacute;l&eacute;ment &agrave; afficher\",\n        emptyTable: \"Aucune donnée disponible dans le tableau\",\n        paginate: {\n          first: \"Premier\",\n          previous: \"Pr&eacute;c&eacute;dent\",\n          next: \"Suivant\",\n          last: \"Dernier\"\n        },\n        aria: {\n          sortAscending: \": activer pour trier la colonne par ordre croissant\",\n          sortDescending: \": activer pour trier la colonne par ordre décroissant\"\n        }\n      },\n\n      columns: [{\n        data: 'classe'\n      }, {\n        data: 'matiere'\n      }, {\n        data: null,\n        render: function render(data, type, row) {\n          // Combine the first and last names into a single table field\n          return data.nom + ' ' + data.prenom;\n        }\n      }, {\n        data: 'duree'\n      }, {\n        data: 'totalColles'\n      }, {\n        data: null,\n        render: function render(data, type, row) {\n          if (data.totalColles > 0) {\n            return 'X';\n          } else {\n            return '<a href=\"\" class=\"editor_supp\">Supp</a>';\n          }\n        }\n      }],\n      columnDefs: [{\n        className: 'text-center',\n        targets: [3, 4, 5]\n      }]\n    });\n\n    // Supp record\n    $('#tableMesCollesClasses').on('click', 'a.editor_supp', function (e) {\n      e.preventDefault();\n      var tr = $(this).closest('tr');\n      var row = table.row(tr);\n      var element = row.data();\n      var idClasseMatiereColleur = element.idClasseMatiereColleur;\n      var idClasseMatiere = element.idClasseMatiere;\n      suppClasseMatiereColleur(idClasseMatiere, idColleur);\n    });\n  };\n\n  /*\n  ********************************************************************\n    Suppression d'une matiere colleur\n  ************************************************************\n    */\n  function suppClasseMatiereColleur(idClasseMatiere, idClasseMatiereColleur) {\n    $.post(\"/professeur/suppClasseMatiereColleur/\", {\n      \"idClasseMatiere\": idClasseMatiere,\n      \"idClasseMatiereColleur\": idClasseMatiereColleur\n    }, function (message) {\n      refreshTableMesCollesClasses();\n    });\n  }\n\n  /*\n  ********************************************************************\n    Mise à jour de la table des colles\n  ************************************************************\n    */\n  function refreshTableMesCollesClasses() {\n    $.post(\"/professeur/tableMesCollesClassesJSON/\", {\n      'idProfesseur': idProfesseur\n    }, function (data) {\n      console.log(data);\n      var table = $('#tableMesCollesClasses').DataTable({ retrieve: true });\n      table.clear().draw();\n      table.rows.add(data); // Add new data\n      table.columns.adjust().draw(); // Redraw the DataTable\n      var el1 = document.getElementById('dataListe1'); //liste des colles du professeur\n      dataListe.setDataListe(el1, data); //on met a jour la dataliste\n      var el4 = document.getElementById('dataListe4'); // on masque la liste des matieres/classes\n      dataListe.display(el4, false); // on la masque\n    });\n  }\n\n  /*\n  ********************************************************************\n        PUBLIC\n  ************************************************************\n        */\n\n  self.init = function () {\n    //getListeClasses();\n    getListeClassesMatieres(); //test\n    initDataTablesMesCollesClasses();\n    refreshTableMesCollesClasses();\n  };\n\n  return self;\n}();\n\nmodule.exports = paramCollesClasses;\n\n//# sourceURL=webpack:///./src/professeur/paramCollesClasses.js?");

/***/ }),

/***/ "./src/professeur/paramMesClasses.js":
/*!*******************************************!*\
  !*** ./src/professeur/paramMesClasses.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/*\n**************************\n      Script onglet parametrage  les classes coordo\n **************************\n */\n\nvar paramMesClasses = function () {\n  var self = {};\n  var idProfesseur = $('body').data(\"idprofesseur\");\n  var dataListe = __webpack_require__(/*! ../misc/dataListe.js */ \"./src/misc/dataListe.js\");\n\n  /*\n  ********************************************************************\n        PRIVE\n  ************************************************************\n  */\n\n  var el10 = document.getElementById('dataListe10');\n  var el11 = document.getElementById('dataListe11');\n  dataListe.selectId(el11);\n  /*\n     **************************\n          daliste professeurs\n      **************************\n      */\n  $.get(\"/admin/tableProfesseursJSON/\", function (data) {\n    //on met à jour les datalistes correspondantes\n    dataListe.setDataListe(el10, data);\n    dataListe.selectId(el10);\n  });\n\n  /*\n    ********************************************************************\n          Choix de la classe pour ensuite choisir la matière dans modal form\n    ************************************************************\n          */\n\n  $('#addColleurForm').submit(function (e) {\n    e.preventDefault();\n    var el10 = document.getElementById('dataListe10');\n    var el11 = document.getElementById('dataListe11');\n    var professeur = dataListe.getName(el10);\n    var idProfesseur = dataListe.getId(el10);\n    var idClasseMatiere = dataListe.getId(el11);\n    $.post(\"/professeur/addColleur/\", {\n      'idProfesseur': idProfesseur,\n      'idClasseMatiere': idClasseMatiere\n    }, function (message) {\n      if (message.error !== \"ok\") {\n        $('#error').html(message.error);\n        $('#erreur').modal();\n      } else {\n        $('#addColleurClasse').modal('hide');\n        refreshTableMesClasses();\n      }\n      $('#addColleurForm')[0].reset();\n      $(\"#addColleurForm input[type=hidden]\").val('');\n    });\n  });\n\n  function initDataTablesMesClasses() {\n    var liste = [];\n    var table = $('#tableMesClasses').DataTable({\n      retrieve: true,\n      data: liste,\n      // dom : '<\"top\"Bif>rt<\"bottom\"lp><\"clear\">',\n      language: {\n        processing: \"Traitement en cours...\",\n        search: \"Rechercher&nbsp;:\",\n        lengthMenu: \"Afficher _MENU_ &eacute;l&eacute;ments\",\n        info: \"Affichage de l'&eacute;lement _START_ &agrave; _END_ sur _TOTAL_ &eacute;l&eacute;ments\",\n        infoEmpty: \"Affichage de l'&eacute;lement 0 &agrave; 0 sur 0 &eacute;l&eacute;ments\",\n        infoFiltered: \"(filtr&eacute; de _MAX_ &eacute;l&eacute;ments au total)\",\n        infoPostFix: \"\",\n        loadingRecords: \"Chargement en cours...\",\n        zeroRecords: \"Aucun &eacute;l&eacute;ment &agrave; afficher\",\n        emptyTable: \"Aucune donnée disponible dans le tableau\",\n        paginate: {\n          first: \"Premier\",\n          previous: \"Pr&eacute;c&eacute;dent\",\n          next: \"Suivant\",\n          last: \"Dernier\"\n        },\n        aria: {\n          sortAscending: \": activer pour trier la colonne par ordre croissant\",\n          sortDescending: \": activer pour trier la colonne par ordre décroissant\"\n        }\n      },\n\n      columns: [{\n        data: 'classe'\n      }, {\n        data: 'matiere'\n      }, {\n        data: null,\n        render: function render(data, type, row) {\n          // Combine the first and last names into a single table field\n          return data.nom + ' ' + data.prenom;\n        }\n      }, {\n        data: 'totalColles'\n      }, {\n        data: null,\n        render: function render(data, type, row) {\n          if (data.totalColles > 0) {\n            return 'X';\n          } else {\n            return '<a href=\"\" class=\"editor_supp\">Supp</a>';\n          }\n        }\n      }],\n      columnDefs: [{\n        className: 'text-center',\n        targets: [3, 4]\n      }]\n    });\n\n    // Supp record\n    $('#tableMesClasses').on('click', 'a.editor_supp', function (e) {\n      e.preventDefault();\n      var tr = $(this).closest('tr');\n      var row = table.row(tr);\n      var element = row.data();\n      var idClasseMatiereColleur = element.idColleur;\n      var idClasseMatiere = element.idClasseMatiere;\n      suppClasseMatiereColleur(idClasseMatiere, idClasseMatiereColleur);\n    });\n  };\n\n  /*\n  ********************************************************************\n    Suppression d'une matiere colleur\n  ************************************************************\n    */\n  function suppClasseMatiereColleur(idClasseMatiere, idClasseMatiereColleur) {\n    $.post(\"/professeur/suppClasseMatiereColleur/\", {\n      \"idClasseMatiere\": idClasseMatiere,\n      \"idClasseMatiereColleur\": idClasseMatiereColleur\n    }, function (message) {\n      refreshTableMesClasses();\n    });\n  }\n\n  /*\n  ********************************************************************\n    Mise à jour de la table des colles\n  ************************************************************\n    */\n  function refreshTableMesClasses() {\n    $.post(\"/professeur/tableMesClassesJSON/\", {\n      'idProfesseur': idProfesseur\n    }, function (data) {\n      $('#tableMesClasses').DataTable().clear().draw();\n      $('#tableMesClasses').DataTable().rows.add(data); // Add new data\n      $('#tableMesClasses').DataTable().columns.adjust().draw(); // Redraw the DataTable\n    });\n  }\n\n  function getListeClassesMatieresCoordo() {\n    $.post(\"/professeur/listeClassesMatieresCoordoJSON/\", {\n      'idProfesseur': idProfesseur\n    }, function (data) {\n      console.log(data);\n      var el11 = document.getElementById('dataListe11');\n      dataListe.setDataListe(el11, data); //on peuple les classes\n    });\n  }\n\n  /*\n  ********************************************************************\n        PUBLIC\n  ************************************************************\n        */\n\n  self.init = function () {\n    getListeClassesMatieresCoordo();\n    initDataTablesMesClasses();\n    refreshTableMesClasses();\n  };\n\n  return self;\n}();\n\nmodule.exports = paramMesClasses;\n\n//# sourceURL=webpack:///./src/professeur/paramMesClasses.js?");

/***/ }),

/***/ "./src/professeur/programme.js":
/*!*************************************!*\
  !*** ./src/professeur/programme.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar programme = function () {\n\n  var self = {};\n  var idProfesseur = document.body.getAttribute(\"data-idprofesseur\");\n  var dataListe = __webpack_require__(/*! ../misc/dataListe.js */ \"./src/misc/dataListe.js\");\n\n  /*\n  ********************************************************************\n        PRIVE\n  ************************************************************\n   /*\n  ********************************************************************\n    Mise à jour de la table\n  ************************************************************\n  */\n  function refreshTableProgrammeColleur() {\n    $.post(\"/professeur/tableProgrammeColleurJSON/\", {\n      'idProfesseur': idProfesseur\n    }, function (data) {\n      $('#tableProgrammeColleur').DataTable().clear().draw();\n      $('#tableProgrammeColleur').DataTable().rows.add(data); // Add new data\n      $('#tableProgrammeColleur').DataTable().columns.adjust().draw(); // Redraw the DataTable\n    });\n  }\n\n  function detailProgrammeColleur(d) {\n    // `d` is the original data object for the row\n    return '<table cellpadding=\"5\" cellspacing=\"0\" border=\"0\" style=\"padding-left:50px;\">' + '<tr>' + '<td>Détail:</td>' + '<td>' + d.detail + '</td>' + '</tr>' + '</table>';\n  };\n\n  function initDataTablesProgrammeColleur() {\n    var liste = [];\n    $.fn.dataTable.moment('DD/MM/YYYY');\n    var table = $('#tableProgrammeColleur').DataTable({\n      retrieve: true,\n      data: liste,\n      // dom : '<\"top\"Bif>rt<\"bottom\"lp><\"clear\">',\n      language: {\n        processing: \"Traitement en cours...\",\n        search: \"Rechercher&nbsp;:\",\n        lengthMenu: \"Afficher _MENU_ &eacute;l&eacute;ments\",\n        info: \"Affichage de l'&eacute;lement _START_ &agrave; _END_ sur _TOTAL_ &eacute;l&eacute;ments\",\n        infoEmpty: \"Affichage de l'&eacute;lement 0 &agrave; 0 sur 0 &eacute;l&eacute;ments\",\n        infoFiltered: \"(filtr&eacute; de _MAX_ &eacute;l&eacute;ments au total)\",\n        infoPostFix: \"\",\n        loadingRecords: \"Chargement en cours...\",\n        zeroRecords: \"Aucun &eacute;l&eacute;ment &agrave; afficher\",\n        emptyTable: \"Aucune donnée disponible dans le tableau\",\n        paginate: {\n          first: \"Premier\",\n          previous: \"Pr&eacute;c&eacute;dent\",\n          next: \"Suivant\",\n          last: \"Dernier\"\n        },\n        aria: {\n          sortAscending: \": activer pour trier la colonne par ordre croissant\",\n          sortDescending: \": activer pour trier la colonne par ordre décroissant\"\n        }\n      },\n\n      columns: [{\n        data: 'classe'\n      }, {\n        data: null,\n        render: function render(data, type, row) {\n          // Combine the first and last names into a single table field\n          return data.nom + ' ' + data.prenom;\n        }\n      }, {\n        data: null,\n        render: function render(data, type, row) {\n          return moment(data.debut).format(\"DD/MM/YYYY\");\n        }\n      }, {\n        data: null,\n        render: function render(data, type, row) {\n          return moment(data.fin).format(\"DD/MM/YYYY\");\n        }\n      }, {\n        data: \"titre\"\n      }, {\n        \"className\": 'details-control',\n        \"orderable\": false,\n        \"data\": null,\n        \"defaultContent\": ''\n      }]\n    });\n\n    $('#tableProgrammeColleur tbody').on('click', 'td.details-control', function () {\n      var tr = $(this).closest('tr');\n      var row = table.row(tr);\n      if (row.child.isShown()) {\n        // This row is already open - close it\n        row.child.hide();\n        tr.removeClass('shown');\n      } else {\n        // Open this row\n        row.child(detailProgrammeColleur(row.data())).show();\n        tr.addClass('shown');\n      }\n    });\n  };\n\n  /*\n  ********************************************************************\n        PUBLIC\n  ************************************************************\n  */\n\n  self.init = function () {\n    initDataTablesProgrammeColleur();\n    refreshTableProgrammeColleur();\n  };\n\n  return self;\n}();\n\nmodule.exports = programme;\n\n//# sourceURL=webpack:///./src/professeur/programme.js?");

/***/ }),

/***/ "./src/professeur/resultats.js":
/*!*************************************!*\
  !*** ./src/professeur/resultats.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar resultats = function () {\n\n  var self = {};\n  var dataListe = __webpack_require__(/*! ../misc/dataListe.js */ \"./src/misc/dataListe.js\");\n\n  var el7 = document.getElementById('dataListe7'); //liste des classes/matieres\n  dataListe.selectId(el7);\n\n  /*\n  ********************************************************************\n        PRIVE\n  ************************************************************\n  */\n\n  /*\n    Choix d 'une période '\n  */\n\n  $('#datetimepickerRes1').datetimepicker({\n    format: 'L'\n  });\n  $('#datetimepickerRes2').datetimepicker({\n    format: 'L',\n    useCurrent: false\n  });\n\n  $(\"#datetimepickerRes1\").on(\"change.datetimepicker\", function (e) {\n    $('#datetimepickerRes2').datetimepicker('minDate', e.date);\n  });\n  $(\"#datetimepickerRes2\").on(\"change.datetimepicker\", function (e) {\n    $('#datetimepickerRes1').datetimepicker('maxDate', e.date);\n  });\n\n  /*\n  ********************************************************************\n        Choix de la matiere / classe du coordo\n  ************************************************************\n  */\n\n  $('#dataListe7Form').submit(function (e) {\n    e.preventDefault();\n    var el7 = document.getElementById('dataListe7'); //liste des matieresClasse du coordo\n    var classeMatiere = dataListe.getName(el7);\n    var idClasseMatiere = dataListe.getId(el7);\n    if (idClasseMatiere != '') {\n      $('#tabResultatsCoordo').css(\"display\", \"block\");\n    } else {\n      $('#tabResultatsCoordo').css(\"display\", \"none\");\n    }\n  });\n\n  /*\n    Validation du formulaire pour résultat sur une période\n  */\n  $('#periodeResultatsForm').submit(function (e) {\n    e.preventDefault();\n    var debutPeriode = moment($('#datetimepickerRes1').find(\"input\").val(), 'DD/MM/YYYY').format();\n    var finPeriode = moment($('#datetimepickerRes2').find(\"input\").val(), 'DD/MM/YYYY').format();\n    var el7 = document.getElementById('dataListe7'); //liste des matieresClasse du coordo\n    var idClasseMatiere = dataListe.getId(el7);\n    refreshTablesResultatsCoordo(idClasseMatiere, debutPeriode, finPeriode);\n  });\n\n  /*\n  ********************************************************************\n    Mise à jour de la table des colles\n  ************************************************************\n    */\n  function refreshTablesResultatsCoordo(idClasseMatiere, debutPeriode, finPeriode) {\n    $.post(\"/professeur/tableResultatsCoordoJSON/\", {\n      'idClasseMatiere': idClasseMatiere,\n      'debutPeriode': debutPeriode,\n      'finPeriode': finPeriode\n    }, function (data) {\n      var table = $('#tableResultatsCoordo').DataTable();\n      table.clear().draw();\n      table.rows.add(data); // Add new data\n      table.columns.adjust().draw(); // Redraw the DataTable\n    });\n  }\n\n  function initDataTablesResultatsCoordo() {\n    var liste = [];\n    $.fn.dataTable.moment('DD/MM/YYYY');\n    var table = $('#tableResultatsCoordo').DataTable({\n      retrieve: true,\n      data: liste,\n      // dom : '<\"top\"Bif>rt<\"bottom\"lp><\"clear\">',\n      language: {\n        processing: \"Traitement en cours...\",\n        search: \"Rechercher&nbsp;:\",\n        lengthMenu: \"Afficher _MENU_ &eacute;l&eacute;ments\",\n        info: \"Affichage de l'&eacute;lement _START_ &agrave; _END_ sur _TOTAL_ &eacute;l&eacute;ments\",\n        infoEmpty: \"Affichage de l'&eacute;lement 0 &agrave; 0 sur 0 &eacute;l&eacute;ments\",\n        infoFiltered: \"(filtr&eacute; de _MAX_ &eacute;l&eacute;ments au total)\",\n        infoPostFix: \"\",\n        loadingRecords: \"Chargement en cours...\",\n        zeroRecords: \"Aucun &eacute;l&eacute;ment &agrave; afficher\",\n        emptyTable: \"Aucune donnée disponible dans le tableau\",\n        paginate: {\n          first: \"Premier\",\n          previous: \"Pr&eacute;c&eacute;dent\",\n          next: \"Suivant\",\n          last: \"Dernier\"\n        },\n        aria: {\n          sortAscending: \": activer pour trier la colonne par ordre croissant\",\n          sortDescending: \": activer pour trier la colonne par ordre décroissant\"\n        }\n      },\n\n      columns: [{\n        data: null,\n        render: function render(data, type, row) {\n          // Combine the first and last names into a single table field\n          return data.nomE + ' ' + data.prenomE;\n        }\n      }, {\n        data: null,\n        render: function render(data, type, row) {\n          var notes = '';\n          data.notes.forEach(function (value) {\n            notes += value + ';';\n          });\n          return notes;\n        }\n      }, {\n        data: 'moyenne'\n        // render: function(data, type, row) {\n        //   let moyenne=data.moyenne\n        //   if (moyenne){moyenne=moyenne.toFixed(2)}\n        //   return moyenne ;\n        // },\n      }, {\n        data: \"rank\",\n        defaultContent: ''\n      }],\n      drawCallback: function drawCallback() {\n        var api = this.api();\n        var arr = api.columns(2).data()[0]; //get array of column 3 (extn)\n        var sorted = arr.slice().sort(function (a, b) {\n          return b - a;\n        });\n        var ranks = arr.slice().map(function (v) {\n          return sorted.indexOf(v) + 1;\n        });\n        // interate through each row\n        api.rows().every(function (rowIdx, tableLoop, rowLoop) {\n          var data = this.data();\n          var moyenne = data.moyenne;\n          data.rank = ranks[arr.indexOf(data.moyenne)]; //set the rank column = the array index of the extn in the ranked array\n        });\n        api.rows().invalidate();\n      }\n\n    });\n  };\n  /*\n  ********************************************************************\n        PUBLIC\n  ************************************************************\n  */\n\n  self.init = function () {\n    initDataTablesResultatsCoordo();\n  };\n\n  return self;\n}();\n\nmodule.exports = resultats;\n\n//# sourceURL=webpack:///./src/professeur/resultats.js?");

/***/ }),

/***/ "./src/professeur/synthese.js":
/*!************************************!*\
  !*** ./src/professeur/synthese.js ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar synthese = function () {\n\n  var self = {};\n  var idProfesseur = document.body.getAttribute(\"data-idprofesseur\");\n  var dataListe = __webpack_require__(/*! ../misc/dataListe.js */ \"./src/misc/dataListe.js\");\n\n  var el5 = document.getElementById('dataListe5'); //liste des élèves\n  dataListe.selectId(el5);\n\n  /*\n  ********************************************************************\n        PRIVE\n  ************************************************************\n    /*\n  ********************************************************************\n        Choix de la matiere / classe du coordo\n  ************************************************************\n  */\n\n  $('#dataListe5Form').submit(function (e) {\n    e.preventDefault();\n    var el5 = document.getElementById('dataListe5'); //liste des matieresClasse du coordo\n    var classeMatiere = dataListe.getName(el5);\n    var idClasseMatiere = dataListe.getId(el5);\n    if (idClasseMatiere != '') {\n      $('#tabCollesCoordo').css(\"display\", \"block\");\n      refreshTableCoordo(idClasseMatiere);\n    } else {\n      $('#tabCollesCoordo').css(\"display\", \"none\");\n    }\n  });\n\n  /*\n  **************************\n      fonction permettant d'afficher la liste des colles pour une matière/classe donnée\n   **************************\n   */\n\n  function formatCoordo(d) {\n    // `d` is the original data object for the row\n    return '<table cellpadding=\"5\" cellspacing=\"0\" border=\"0\" style=\"padding-left:50px;\">' + '<tr>' + '<td>Sujet:</td>' + '<td>' + d.sujet + '</td>' + '</tr>' + '<tr>' + '<td>obs. coordo:</td>' + '<td>' + d.obsCoordo + '</td>' + '</tr>' + '<tr>' + '<td>obs. élève:</td>' + '<td>' + d.obsEleve + '</td>' + '</tr>' + '</table>';\n  };\n\n  /*\n  ********************************************************************\n    Mise à jour de la table des colles\n  ************************************************************\n    */\n  function refreshTableCoordo(idClasseMatiere) {\n    $.post(\"/professeur/tableCollesCoordoJSON/\", {\n      'idClasseMatiere': idClasseMatiere\n    }, function (data) {\n      $('#tableCollesCoordo').DataTable().clear().draw();\n      $('#tableCollesCoordo').DataTable().rows.add(data); // Add new data\n      $('#tableCollesCoordo').DataTable().columns.adjust().draw(); // Redraw the DataTable\n    });\n  }\n\n  function initDataTablesCoordo() {\n    var liste = [];\n    $.fn.dataTable.moment('DD/MM/YYYY');\n    var table = $('#tableCollesCoordo').DataTable({\n      retrieve: true,\n      data: liste,\n      // dom : '<\"top\"Bif>rt<\"bottom\"lp><\"clear\">',\n      language: {\n        processing: \"Traitement en cours...\",\n        search: \"Rechercher&nbsp;:\",\n        lengthMenu: \"Afficher _MENU_ &eacute;l&eacute;ments\",\n        info: \"Affichage de l'&eacute;lement _START_ &agrave; _END_ sur _TOTAL_ &eacute;l&eacute;ments\",\n        infoEmpty: \"Affichage de l'&eacute;lement 0 &agrave; 0 sur 0 &eacute;l&eacute;ments\",\n        infoFiltered: \"(filtr&eacute; de _MAX_ &eacute;l&eacute;ments au total)\",\n        infoPostFix: \"\",\n        loadingRecords: \"Chargement en cours...\",\n        zeroRecords: \"Aucun &eacute;l&eacute;ment &agrave; afficher\",\n        emptyTable: \"Aucune donnée disponible dans le tableau\",\n        paginate: {\n          first: \"Premier\",\n          previous: \"Pr&eacute;c&eacute;dent\",\n          next: \"Suivant\",\n          last: \"Dernier\"\n        },\n        aria: {\n          sortAscending: \": activer pour trier la colonne par ordre croissant\",\n          sortDescending: \": activer pour trier la colonne par ordre décroissant\"\n        }\n      },\n      order: [],\n      columns: [{\n        data: null,\n        orderable: false,\n        render: function render(data, type, row) {\n          // Combine the first and last names into a single table field\n          return data.nomE + ' ' + data.prenomE;\n        }\n      }, {\n        data: null,\n        orderable: false,\n        render: function render(data, type, row) {\n          // Combine the first and last names into a single table field\n          return data.nomP + ' ' + data.prenomP;\n        }\n      }, {\n        data: null,\n        orderable: false,\n        render: function render(data, type, row) {\n          if (data.note === null) {\n            return data.noNote;\n          }\n          return data.note;\n        }\n      }, {\n        data: \"date\",\n        render: function render(data, type, row) {\n          if (type === \"sort\" || type === \"type\") {\n            return data;\n          }\n          return moment(data).format(\"DD/MM/YYYY\");\n        }\n      }, {\n        \"className\": 'details-control',\n        \"orderable\": false,\n        \"data\": null,\n        \"defaultContent\": ''\n      }]\n    });\n\n    $('#tableCollesCoordo tbody').on('click', 'td.details-control', function () {\n      var tr = $(this).closest('tr');\n      var row = table.row(tr);\n      if (row.child.isShown()) {\n        // This row is already open - close it\n        row.child.hide();\n        tr.removeClass('shown');\n      } else {\n        // Open this row\n        row.child(formatCoordo(row.data())).show();\n        tr.addClass('shown');\n      }\n    });\n  };\n\n  /*\n  ********************************************************************\n        PUBLIC\n  ************************************************************\n  */\n\n  self.init = function () {\n    initDataTablesCoordo();\n  };\n\n  return self;\n}();\n\nmodule.exports = synthese;\n\n//# sourceURL=webpack:///./src/professeur/synthese.js?");

/***/ })

/******/ });